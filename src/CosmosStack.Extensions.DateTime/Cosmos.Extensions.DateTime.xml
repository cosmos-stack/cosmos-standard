<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CosmosStack.Extensions.DateTime</name>
    </assembly>
    <members>
        <member name="M:CosmosStack.Conversions.DayOfWeekConv.ToInt(System.DayOfWeek)">
            <summary>
            Convert <see cref="T:System.DayOfWeek"/> to <see cref="T:System.Int32"/><br />
            将 <see cref="T:System.DayOfWeek"/> 转换为 <see cref="T:System.Int32"/>。
            </summary>
            <param name="week"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Conversions.DayOfWeekConv.ToInt(System.DayOfWeek,System.Int32)">
            <summary>
            Convert <see cref="T:System.DayOfWeek"/> to <see cref="T:System.Int32"/><br />
            将 <see cref="T:System.DayOfWeek"/> 转换为 <see cref="T:System.Int32"/>。
            </summary>
            <param name="week"></param>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Conversions.DayOfWeekConvExtensions">
            <summary>
            CosmosStack <see cref="T:System.DayOfWeek"/> extensions.
            </summary>
        </member>
        <member name="M:CosmosStack.Conversions.DayOfWeekConvExtensions.CastToInt(System.DayOfWeek)">
            <summary>
            Convert <see cref="T:System.DayOfWeek"/> to <see cref="T:System.Int32"/><br />
            将 <see cref="T:System.DayOfWeek"/> 转换为 <see cref="T:System.Int32"/>。
            </summary>
            <param name="week"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Conversions.DayOfWeekConvExtensions.CastToInt(System.DayOfWeek,System.Int32)">
            <summary>
            Convert <see cref="T:System.DayOfWeek"/> to <see cref="T:System.Int32"/><br />
            将 <see cref="T:System.DayOfWeek"/> 转换为 <see cref="T:System.Int32"/>。
            </summary>
            <param name="week"></param>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Conversions.StringDeterminers.StringDateInfoDeterminer">
            <summary>
            Internal core conversion helper from string to DateInfo
            </summary>
        </member>
        <member name="M:CosmosStack.Conversions.StringDeterminers.StringDateInfoDeterminer.Is(System.String,System.Globalization.DateTimeStyles,System.IFormatProvider,System.Action{CosmosStack.Date.DateInfo})">
            <summary>
            Is
            </summary>
            <param name="text"></param>
            <param name="style"></param>
            <param name="formatProvider"></param>
            <param name="matchedCallback"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Conversions.StringDeterminers.StringDateInfoDeterminer.Is(System.String,System.Collections.Generic.IEnumerable{CosmosStack.Conversions.IConversionTry{System.String,CosmosStack.Date.DateInfo}},System.Globalization.DateTimeStyles,System.IFormatProvider,System.Action{CosmosStack.Date.DateInfo})">
            <summary>
            Is
            </summary>
            <param name="text"></param>
            <param name="tries"></param>
            <param name="style"></param>
            <param name="formatProvider"></param>
            <param name="matchedCallback"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Conversions.StringDeterminers.StringDateInfoDeterminer.To(System.String,System.Globalization.DateTimeStyles,System.IFormatProvider,CosmosStack.Date.DateInfo)">
            <summary>
            To
            </summary>
            <param name="text"></param>
            <param name="style"></param>
            <param name="formatProvider"></param>
            <param name="defaultVal"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Conversions.StringDeterminers.StringDateInfoDeterminer.To(System.String,System.Collections.Generic.IEnumerable{CosmosStack.Conversions.IConversionImpl{System.String,CosmosStack.Date.DateInfo}},System.Globalization.DateTimeStyles,System.IFormatProvider)">
            <summary>
            To
            </summary>
            <param name="text"></param>
            <param name="impls"></param>
            <param name="style"></param>
            <param name="formatProvider"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Conversions.StringDeterminers.StringDateTimeSpanDeterminer">
            <summary>
            Internal core conversion helper from string to DateTimeSpan
            </summary>
        </member>
        <member name="M:CosmosStack.Conversions.StringDeterminers.StringDateTimeSpanDeterminer.Is(System.String,System.IFormatProvider,System.Action{CosmosStack.Date.DateTimeSpan})">
            <summary>
            Is
            </summary>
            <param name="text"></param>
            <param name="formatProvider"></param>
            <param name="matchedCallback"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Conversions.StringDeterminers.StringDateTimeSpanDeterminer.Is(System.String,System.Collections.Generic.IEnumerable{CosmosStack.Conversions.IConversionTry{System.String,CosmosStack.Date.DateTimeSpan}},System.IFormatProvider,System.Action{CosmosStack.Date.DateTimeSpan})">
            <summary>
            Is
            </summary>
            <param name="text"></param>
            <param name="tries"></param>
            <param name="formatProvider"></param>
            <param name="matchedCallback"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Conversions.StringDeterminers.StringDateTimeSpanDeterminer.To(System.String,System.IFormatProvider,CosmosStack.Date.DateTimeSpan)">
            <summary>
            To
            </summary>
            <param name="text"></param>
            <param name="formatProvider"></param>
            <param name="defaultVal"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Conversions.StringDeterminers.StringDateTimeSpanDeterminer.To(System.String,System.Collections.Generic.IEnumerable{CosmosStack.Conversions.IConversionImpl{System.String,CosmosStack.Date.DateTimeSpan}},System.IFormatProvider)">
            <summary>
            To
            </summary>
            <param name="text"></param>
            <param name="impls"></param>
            <param name="formatProvider"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Conversions.StringDeterminers.StringDeterminingHelper">
            <summary>
            Helper
            </summary>
        </member>
        <member name="M:CosmosStack.Conversions.StringDeterminers.StringDeterminingHelper.IsXXX``2(``0,System.Func{``0,System.Boolean},System.Func{``0,System.Action{``1},System.Boolean},System.Collections.Generic.IEnumerable{CosmosStack.Conversions.IConversionTry{``0,``1}},System.Action{``1})">
            <summary>
            Is xxx
            </summary>
            <param name="from"></param>
            <param name="fromTry"></param>
            <param name="firstTry"></param>
            <param name="tries"></param>
            <param name="act"></param>
            <typeparam name="TFrom"></typeparam>
            <typeparam name="TTo"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Conversions.StringDeterminers.StringDeterminingHelper.ToXXX``2(``0,System.Func{``0,System.Action{``1},System.Boolean},System.Collections.Generic.IEnumerable{CosmosStack.Conversions.IConversionImpl{``0,``1}})">
            <summary>
            To xxx
            </summary>
            <param name="from"></param>
            <param name="firstImpl"></param>
            <param name="impls"></param>
            <typeparam name="TFrom"></typeparam>
            <typeparam name="TTo"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Date.Chinese.ChineseAnimalHelper">
            <summary>
            Chinese Animal Helper<br />
            中国生肖辅助类
            </summary>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseAnimalHelper.Get(System.DateTime,System.Boolean)">
            <summary>
            Get<br />
            获得生肖值
            </summary>
            <param name="dt"></param>
            <param name="traditionalChineseCharacters"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Date.Chinese.ChineseConstellationHelper">
            <summary>
            Chinese Constellation helper<br />
            二十八星宿辅助类
            </summary>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseConstellationHelper.Get(System.DateTime,System.Boolean)">
            <summary>
            Get Chinese Constellation<br />
            获取二十八星宿
            </summary>
            <param name="dt"></param>
            <param name="traditionalChineseCharacters"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseConstellationHelper.Get(CosmosStack.Date.DateInfo,System.Boolean)">
            <summary>
            Get Chinese Constellation<br />
            获取二十八星宿
            </summary>
            <param name="dt"></param>
            <param name="traditionalChineseCharacters"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseConstellationHelper.Get(CosmosStack.Date.Chinese.ChineseDateTime,System.Boolean)">
            <summary>
            Get Chinese Constellation<br />
            获取二十八星宿
            </summary>
            <param name="dt"></param>
            <param name="traditionalChineseCharacters"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseConstellationHelper.Get(CosmosStack.Date.Chinese.ChineseDateInfo,System.Boolean)">
            <summary>
            Get Chinese Constellation<br />
            获取二十八星宿
            </summary>
            <param name="dt"></param>
            <param name="traditionalChineseCharacters"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Date.Chinese.ChineseDateHelper">
            <summary>
            Chines Date Helper<br />
            农历辅助类
            </summary>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateHelper.GetChineseYear(System.DateTime,System.Boolean)">
            <summary>
            Gets Chinese Year<br />
            获得农历年
            </summary>
            <param name="dt"></param>
            <param name="traditionalChineseCharacters"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateHelper.GetSexagenaryYear(System.Globalization.ChineseLunisolarCalendar,System.DateTime,System.Boolean)">
            <summary>
            Gets Chinese Sexagenary Year<br />
            获得干支年
            </summary>
            <param name="calendar"></param>
            <param name="dt"></param>
            <param name="traditionalChineseCharacters"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateHelper.GetChineseMonth(System.Globalization.ChineseLunisolarCalendar,System.DateTime,System.Boolean)">
            <summary>
            Gets Chinese Month<br />
            获得农历月
            </summary>
            <param name="calendar"></param>
            <param name="dt"></param>
            <param name="traditionalChineseCharacters"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateHelper.GetChineseDay(System.Globalization.ChineseLunisolarCalendar,System.DateTime,System.Boolean)">
            <summary>
            Gets Chinese Day<br />
            获得农历日
            </summary>
            <param name="calendar"></param>
            <param name="dt"></param>
            <param name="traditionalChineseCharacters"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateHelper.GetChineseHour(System.Globalization.ChineseLunisolarCalendar,System.DateTime,System.Boolean)">
            <summary>
            Gets Chinese Hour<br />
            获得农历时辰
            </summary>
            <param name="calendar"></param>
            <param name="dt"></param>
            <param name="traditionalChineseCharacters"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateHelper.IsLeapYear(System.Globalization.ChineseLunisolarCalendar,System.DateTime)">
            <summary>
            Is special year a leap year<br />
            指定年是否为闰年
            </summary>
            <param name="calendar"></param>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateHelper.IsLeapYear(System.Globalization.ChineseLunisolarCalendar,CosmosStack.Date.DateInfo)">
            <summary>
            Is special year a leap year<br />
            指定年是否为闰年
            </summary>
            <param name="calendar"></param>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateHelper.IsLeapMonth(System.Globalization.ChineseLunisolarCalendar,System.DateTime)">
            <summary>
            Is special month a leap month<br />
            指定月是否为闰月
            </summary>
            <param name="calendar"></param>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateHelper.IsLeapMonth(System.Globalization.ChineseLunisolarCalendar,CosmosStack.Date.DateInfo)">
            <summary>
            Is special month a leap month<br />
            指定月是否为闰月
            </summary>
            <param name="calendar"></param>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateHelper.IsLeapDay(System.Globalization.ChineseLunisolarCalendar,System.DateTime)">
            <summary>
            Is special day a leap day<br />
            指定日是否为闰日
            </summary>
            <param name="calendar"></param>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateHelper.IsLeapDay(System.Globalization.ChineseLunisolarCalendar,CosmosStack.Date.DateInfo)">
            <summary>
            Is special day a leap day<br />
            指定日是否为闰日
            </summary>
            <param name="calendar"></param>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Date.Chinese.ChineseDateInfo">
            <summary>
            Chinese Date Info<br />
            中国农历日期
            </summary>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateInfo.#ctor(System.DateTime)">
            <summary>
            Create a new instance for <see cref="T:CosmosStack.Date.Chinese.ChineseDateInfo"/><br />
            创建一个 <see cref="T:CosmosStack.Date.Chinese.ChineseDateInfo"/> 的新实例
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateInfo.#ctor(CosmosStack.Date.Chinese.ChineseDateTime)">
            <summary>
            Create a new instance for <see cref="T:CosmosStack.Date.Chinese.ChineseDateInfo"/><br />
            创建一个 <see cref="T:CosmosStack.Date.Chinese.ChineseDateInfo"/> 的新实例
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateInfo.#ctor(CosmosStack.Date.DateInfo)">
            <summary>
            Create a new instance for <see cref="T:CosmosStack.Date.Chinese.ChineseDateInfo"/><br />
            创建一个 <see cref="T:CosmosStack.Date.Chinese.ChineseDateInfo"/> 的新实例
            </summary>
            <param name="date"></param>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateInfo.#ctor(System.DateTime,System.Globalization.ChineseLunisolarCalendar)">
            <summary>
            Create a new instance for <see cref="T:CosmosStack.Date.Chinese.ChineseDateInfo"/><br />
            创建一个 <see cref="T:CosmosStack.Date.Chinese.ChineseDateInfo"/> 的新实例
            </summary>
            <param name="dt"></param>
            <param name="calendar"></param>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateInfo.IsLeapYear">
            <summary>
            Is current year a leap year.<br />
            当前年份是否为闰年
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateInfo.IsLeapMonth">
            <summary>
            Is current month a leap month.<br />
            当前月份是否为闰月
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateInfo.IsLeapDay">
            <summary>
            Is current day a leap day.<br />
            当前日份是否为闰日
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateInfo.IsWeekend">
            <summary>
            Is current day weekend<br />
            当天日期是否为周末
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateInfo.IsWorkDay">
            <summary>
            Is current day a work day<br />
            当前日期是否为工作日
            </summary>
            <returns></returns>
        </member>
        <member name="P:CosmosStack.Date.Chinese.ChineseDateInfo.ChineseYear">
            <summary>
            Gets Chinese year<br />
            获取农历年份
            </summary>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateInfo.GetChineseYear(System.Boolean)">
            <summary>
            Gets Chinese year as string<br />
            获取汉字农历年份
            </summary>
            <param name="traditionalChineseCharacters"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateInfo.GetSexagenaryYear(System.Boolean)">
            <summary>
            Gets Chines Sexagenary Year<br />
            获取干支年
            </summary>
            <param name="traditionalChineseCharacters"></param>
            <returns></returns>
        </member>
        <member name="P:CosmosStack.Date.Chinese.ChineseDateInfo.ChineseMonth">
            <summary>
            Gets Chinese month.<br />
            获取农历月份
            </summary>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateInfo.GetChineseMonth(System.Boolean)">
            <summary>
            Gets Chinese month as string.<br />
            获取汉字农历月份
            </summary>
            <param name="traditionalChineseCharacters"></param>
            <returns></returns>
        </member>
        <member name="P:CosmosStack.Date.Chinese.ChineseDateInfo.ChineseDay">
            <summary>
            Gets Chinese day.<br />
            获取农历日份
            </summary>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateInfo.GetChineseDay(System.Boolean)">
            <summary>
            Gets Chinese day as string.<br />
            获取汉字农历日份
            </summary>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateInfo.GetChineseDate(System.Boolean)">
            <summary>
            Gets Chinese date<br />
            获取农历日期
            </summary>
            <param name="traditionalChineseCharacters"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateInfo.GetChineseDateWithYear(System.Boolean)">
            <summary>
            Gets Chinese date with Chinese year<br />
            获取农历日期（带年份）
            </summary>
            <param name="traditionalChineseCharacters"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateInfo.GetChineseDateWithSexagenaryYear(System.Boolean)">
            <summary>
            Gets Chinese date with Chinese Sexagenary year<br />
            获取农历日期（带干支年分）
            </summary>
            <param name="traditionalChineseCharacters"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateInfo.GetSolarTerm(System.Boolean)">
            <summary>
            Gets solar term<br />
            获取节气
            </summary>
            <param name="traditionalChineseCharacters"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateInfo.GetLastSolarTerm(System.Boolean)">
            <summary>
            Gets last solar term<br />
            获得上一个节气
            </summary>
            <param name="traditionalChineseCharacters"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateInfo.GetLastSolarTerm(System.DateTime@,System.Boolean)">
            <summary> 
            Gets last solar term<br />
            获得上一个节气和具体的公历时间
            </summary>
            <param name="dt"></param>
            <param name="traditionalChineseCharacters"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateInfo.GetNextSolarTerm(System.Boolean)">
            <summary>
            Gets next solar term<br />
            获得下一个节气
            </summary>
            <param name="traditionalChineseCharacters"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateInfo.GetNextSolarTerm(System.DateTime@,System.Boolean)">
            <summary>
            Gets next solar term<br />
            获得下一个节气和具体的公历时间
            </summary>
            <param name="dt"></param>
            <param name="traditionalChineseCharacters"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateInfo.Tomorrow">
            <summary>
            Tomorrow<br />
            明天
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateInfo.Yesterday">
            <summary>
            Yesterday<br />
            昨天
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateInfo.AddDays(System.Int32)">
            <summary>
            Add days<br />
            添加若干天
            </summary>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateInfo.AddWorkDays(System.Int32)">
            <summary>
            Add work days<br />
            添加若干工作日
            </summary>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateInfo.AddMonths(System.Int32)">
            <summary>
            Add months<br />
            添加月份
            </summary>
            <param name="months"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateInfo.GetDaysInYear">
            <summary>
            Gets days in year.<br />
            农历年中共有几天
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateInfo.GetDaysInMonth">
            <summary>
            Gets days in month.<br />
            农历月中共有几天
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateInfo.GetDayOfYear">
            <summary>
            Calculates the day of the Chinese year in the special date.<br />
            农历年中的第几天 
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateInfo.GetDayOfMonth">
            <summary>
            Calculates the day of the Chinese month in the special date.<br />
            农历月中的第几天 
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateInfo.GetDayOfWeek">
            <summary>
            Calculates the day of the week in the special date.<br />
            一周中的第几天 
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateInfo.ToDateTime">
            <summary>
            Convert to <see cref="T:System.DateTime"/><br />
            转换为 <see cref="T:System.DateTime"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateInfo.op_Implicit(CosmosStack.Date.Chinese.ChineseDateInfo)~CosmosStack.Date.DateInfo">
            <summary>
            Convert <see cref="T:CosmosStack.Date.Chinese.ChineseDateInfo"/> to <see cref="T:CosmosStack.Date.DateInfo"/>
            </summary>
            <param name="di"></param>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateInfo.op_Implicit(CosmosStack.Date.DateInfo)~CosmosStack.Date.Chinese.ChineseDateInfo">
            <summary>
            Convert <see cref="T:CosmosStack.Date.DateInfo"/> to <see cref="T:CosmosStack.Date.Chinese.ChineseDateInfo"/>
            </summary>
            <param name="dt"></param>
        </member>
        <member name="P:CosmosStack.Date.Chinese.ChineseDateInfo.InternalTime">
            <summary>
            Gets internal datetime
            </summary>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateInfo.Of(System.Int32,System.Int32,System.Int32)">
            <summary>
            Create a new instance of <see cref="T:CosmosStack.Date.Chinese.ChineseDateInfo"/><br />
            创建一个新的 <see cref="T:CosmosStack.Date.Chinese.ChineseDateInfo"/> 实例。
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateInfo.OfLunar(System.Int32,System.Int32,System.Int32)">
            <summary>
            Create a new instance of <see cref="T:CosmosStack.Date.Chinese.ChineseDateInfo"/><br />
            创建一个新的 <see cref="T:CosmosStack.Date.Chinese.ChineseDateInfo"/> 实例。
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Date.Chinese.ChineseDateTime">
            <summary>
            Chinese Date Time<br />
            中国农历日期与时间
            </summary>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.#ctor(System.DateTime)">
            <summary>
            Create a new instance for <see cref="T:CosmosStack.Date.Chinese.ChineseDateTime"/><br />
            创建一个 <see cref="T:CosmosStack.Date.Chinese.ChineseDateTime"/> 的新实例
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.#ctor(System.DateTime,System.Globalization.ChineseLunisolarCalendar)">
            <summary>
            Create a new instance for <see cref="T:CosmosStack.Date.Chinese.ChineseDateTime"/><br />
            创建一个 <see cref="T:CosmosStack.Date.Chinese.ChineseDateTime"/> 的新实例
            </summary>
            <param name="dt"></param>
            <param name="calendar"></param>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.IsLeapYear">
            <summary>
            Is current year a leap year.<br />
            当前年份是否为闰年
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.IsLeapMonth">
            <summary>
            Is current month a leap month.<br />
            当前月份是否为闰月
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.IsLeapDay">
            <summary>
            Is current day a leap day.<br />
            当前日份是否为闰日
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.IsWeekend">
            <summary>
            Is current day weekend<br />
            当天日期是否为周末
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.IsWorkDay">
            <summary>
            Is current day a work day<br />
            当前日期是否为工作日
            </summary>
            <returns></returns>
        </member>
        <member name="P:CosmosStack.Date.Chinese.ChineseDateTime.ChineseYear">
            <summary>
            Gets Chinese year<br />
            获取农历年份
            </summary>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.GetChineseYear(System.Boolean)">
            <summary>
            Gets Chinese year as string<br />
            获取汉字农历年份
            </summary>
            <param name="traditionalChineseCharacters"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.GetSexagenaryYear(System.Boolean)">
            <summary>
            Gets Chines Sexagenary Year<br />
            获取干支年
            </summary>
            <param name="traditionalChineseCharacters"></param>
            <returns></returns>
        </member>
        <member name="P:CosmosStack.Date.Chinese.ChineseDateTime.ChineseMonth">
            <summary>
            Gets Chinese month.<br />
            获取农历月份
            </summary>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.GetChineseMonth(System.Boolean)">
            <summary>
            Gets Chinese month as string.<br />
            获取汉字农历月份
            </summary>
            <param name="traditionalChineseCharacters"></param>
            <returns></returns>
        </member>
        <member name="P:CosmosStack.Date.Chinese.ChineseDateTime.ChineseDay">
            <summary>
            Gets Chinese day.<br />
            获取农历日份
            </summary>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.GetChineseDay(System.Boolean)">
            <summary>
            Gets Chinese day as string.<br />
            获取汉字农历日份
            </summary>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.GetChineseDate(System.Boolean)">
            <summary>
            Gets Chinese date<br />
            获取农历日期
            </summary>
            <param name="traditionalChineseCharacters"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.GetChineseDateWithYear(System.Boolean)">
            <summary>
            Gets Chinese date with Chinese year<br />
            获取农历日期（带年份）
            </summary>
            <param name="traditionalChineseCharacters"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.GetChineseDateWithSexagenaryYear(System.Boolean)">
            <summary>
            Gets Chinese date with Chinese Sexagenary year<br />
            获取农历日期（带干支年分）
            </summary>
            <param name="traditionalChineseCharacters"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.GetChineseTime(System.Boolean)">
            <summary>
            Gets Chinese Time<br />
            获取农历时辰信息
            </summary>
            <param name="traditionalChineseCharacters"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.GetSolarTerm(System.Boolean)">
            <summary>
            Gets solar term<br />
            获取节气
            </summary>
            <param name="traditionalChineseCharacters"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.GetLastSolarTerm(System.Boolean)">
            <summary>
            Gets last solar term<br />
            获得上一个节气
            </summary>
            <param name="traditionalChineseCharacters"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.GetLastSolarTerm(System.DateTime@,System.Boolean)">
            <summary>
            Gets last solar term<br />
            获得上一个节气和具体的公历时间
            </summary>
            <param name="dt"></param>
            <param name="traditionalChineseCharacters"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.GetNextSolarTerm(System.Boolean)">
            <summary>
            Gets next solar term<br />
            获得下一个节气
            </summary>
            <param name="traditionalChineseCharacters"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.GetNextSolarTerm(System.DateTime@,System.Boolean)">
            <summary>
            Gets next solar term<br />
            获得下一个节气和具体的公历时间
            </summary>
            <param name="dt"></param>
            <param name="traditionalChineseCharacters"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.Tomorrow">
            <summary>
            Tomorrow<br />
            明天
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.Yesterday">
            <summary>
            Yesterday<br />
            昨天
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.AddDays(System.Int32)">
            <summary>
            Add days<br />
            添加若干天
            </summary>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.AddWorkDays(System.Int32)">
            <summary>
            Add work days<br />
            添加若干工作日
            </summary>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.AddMonths(System.Int32)">
            <summary>
            Add months<br />
            添加月份
            </summary>
            <param name="months"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.GetDaysInYear">
            <summary>
            Gets days in year.<br />
            农历年中共有几天
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.GetDaysInMonth">
            <summary>
            Gets days in month.<br />
            农历月中共有几天
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.GetDayOfYear">
            <summary>
            Calculates the day of the Chinese year in the special date.<br />
            农历年中的第几天 
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.GetDayOfMonth">
            <summary>
            Calculates the day of the Chinese month in the special date.<br />
            农历月中的第几天 
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.GetDayOfWeek">
            <summary>
            Calculates the day of the week in the special date.<br />
            一周中的第几天 
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.op_Implicit(CosmosStack.Date.Chinese.ChineseDateTime)~System.DateTime">
            <summary>
            Convert <see cref="T:CosmosStack.Date.Chinese.ChineseDateTime"/> to <see cref="T:System.DateTime"/>
            </summary>
            <param name="di"></param>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.op_Implicit(System.DateTime)~CosmosStack.Date.Chinese.ChineseDateTime">
            <summary>
            Convert <see cref="T:System.DateTime"/> to <see cref="T:CosmosStack.Date.Chinese.ChineseDateTime"/>
            </summary>
            <param name="dt"></param>
        </member>
        <member name="P:CosmosStack.Date.Chinese.ChineseDateTime.InternalChineseLunisolarCalendar">
            <summary>
            Gets <see cref="T:System.Globalization.ChineseLunisolarCalendar"/> instance internal.
            </summary>
        </member>
        <member name="P:CosmosStack.Date.Chinese.ChineseDateTime.InternalTime">
            <summary>
            Gets internal datetime
            </summary>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.ToDateTime">
            <summary>
            Convert to <see cref="T:System.DateTime"/><br />
            转换为 <see cref="T:System.DateTime"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.Of(System.Int32,System.Int32,System.Int32)">
            <summary>
            Create a new instance of <see cref="T:CosmosStack.Date.Chinese.ChineseDateTime"/><br />
            创建一个新的 <see cref="T:CosmosStack.Date.Chinese.ChineseDateTime"/> 实例。
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.Of(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Create a new instance of <see cref="T:CosmosStack.Date.Chinese.ChineseDateTime"/><br />
            创建一个新的 <see cref="T:CosmosStack.Date.Chinese.ChineseDateTime"/> 实例。
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.Of(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Create a new instance of <see cref="T:CosmosStack.Date.Chinese.ChineseDateTime"/><br />
            创建一个新的 <see cref="T:CosmosStack.Date.Chinese.ChineseDateTime"/> 实例。
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="millisecond"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.OfLunar(System.Int32,System.Int32,System.Int32)">
            <summary>
            Create a new instance of <see cref="T:CosmosStack.Date.Chinese.ChineseDateTime"/><br />
            创建一个新的 <see cref="T:CosmosStack.Date.Chinese.ChineseDateTime"/> 实例。
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.OfLunar(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Create a new instance of <see cref="T:CosmosStack.Date.Chinese.ChineseDateTime"/><br />
            创建一个新的 <see cref="T:CosmosStack.Date.Chinese.ChineseDateTime"/> 实例。
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseDateTime.OfLunar(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Create a new instance of <see cref="T:CosmosStack.Date.Chinese.ChineseDateTime"/><br />
            创建一个新的 <see cref="T:CosmosStack.Date.Chinese.ChineseDateTime"/> 实例。
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="millisecond"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Date.Chinese.ChineseSolarTermHelper">
            <summary>
            Chinese solar term helper<br />
            中国二十四节气辅助类
            </summary>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseSolarTermHelper.GetName(CosmosStack.Date.Chinese.ChineseSolarTerms,System.Boolean)">
            <summary>
            Convert <see cref="T:CosmosStack.Date.Chinese.ChineseSolarTerms"/> to Chinese name.<br />
            将 <see cref="T:CosmosStack.Date.Chinese.ChineseSolarTerms"/> 转换为中文名称。
            </summary>
            <param name="solarTerms"></param>
            <param name="traditionalChineseCharacters"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseSolarTermHelper.GetSolarTerm(System.Globalization.ChineseLunisolarCalendar,System.DateTime,System.Boolean)">
            <summary>
            Gets solar term for special day.<br />
            获取指定日期（公历）的节气。
            </summary>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseSolarTermHelper.GetLastSolarTerm(System.Globalization.ChineseLunisolarCalendar,System.DateTime,System.Boolean)">
            <summary>
            Gets last solar term<br />
            获取指定日期（公历）的上一个节气。
            </summary>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseSolarTermHelper.GetLastSolarTerm(System.Globalization.ChineseLunisolarCalendar,System.DateTime,System.DateTime@,System.Boolean)">
            <summary>
            Gets last solar term<br />
            获取指定日期（公历）的上一个节气。
            </summary>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseSolarTermHelper.GetNextSolarTerm(System.Globalization.ChineseLunisolarCalendar,System.DateTime,System.Boolean)">
            <summary>
            Gets next solar term<br />
            获取指定日期（公历）的下一个节气。
            </summary>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseSolarTermHelper.GetNextSolarTerm(System.Globalization.ChineseLunisolarCalendar,System.DateTime,System.DateTime@,System.Boolean)">
            <summary>
            Gets next solar term<br />
            获取指定日期（公历）的下一个节气。
            </summary>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseSolarTermHelper.GetSolarTermEnum(System.Globalization.ChineseLunisolarCalendar,System.DateTime)">
            <summary>
            Get <see cref="T:CosmosStack.Date.Chinese.ChineseSolarTerms"/> for special day.<br />
            获取指定日期（公历）的节气枚举。
            </summary>
            <param name="calendar"></param>
            <param name="targetDt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseSolarTermHelper.GetLastSolarTermEnum(System.Globalization.ChineseLunisolarCalendar,System.DateTime)">
            <summary>
            Gets last <see cref="T:CosmosStack.Date.Chinese.ChineseSolarTerms"/><br />
            获取指定日期（公历）的上一个节气枚举。
            </summary>
            <param name="calendar"></param>
            <param name="targetDt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseSolarTermHelper.GetLastSolarTermEnum(System.Globalization.ChineseLunisolarCalendar,System.DateTime,System.DateTime@)">
            <summary>
            Gets last <see cref="T:CosmosStack.Date.Chinese.ChineseSolarTerms"/><br />
            获取指定日期（公历）的上一个节气枚举。
            </summary>
            <param name="calendar"></param>
            <param name="targetDt"></param>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseSolarTermHelper.GetNextSolarTermEnum(System.Globalization.ChineseLunisolarCalendar,System.DateTime)">
            <summary>
            Gets next <see cref="T:CosmosStack.Date.Chinese.ChineseSolarTerms"/><br />
            获取指定日期（公历）的下一个节气枚举。
            </summary>
            <param name="calendar"></param>
            <param name="targetDt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseSolarTermHelper.GetNextSolarTermEnum(System.Globalization.ChineseLunisolarCalendar,System.DateTime,System.DateTime@)">
            <summary>
            Gets next <see cref="T:CosmosStack.Date.Chinese.ChineseSolarTerms"/><br />
            获取指定日期（公历）的下一个节气枚举。
            </summary>
            <param name="calendar"></param>
            <param name="targetDt"></param>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.ChineseSolarTermHelper.SolarTermFunc(System.Globalization.ChineseLunisolarCalendar,System.DateTime,System.Linq.Expressions.Expression{System.Func{System.Int32,System.Int32,System.Boolean}},System.DateTime@)">
            <summary>
            节气计算（当前年），返回指定条件的节气序及日期（公历）
            </summary>
            <param name="calendar"></param>
            <param name="targetDt"></param>
            <param name="func"></param>
            <param name="dateTime"></param>
            <returns>-1时即没找到</returns>
        </member>
        <member name="T:CosmosStack.Date.Chinese.ChineseSolarTerms">
            <summary>
            Chinese Solar Terms<br />
            农历二十四节气 <br />
            Reference to: http://www.hjenglish.com/fanyi/p945691/
            </summary>
        </member>
        <member name="F:CosmosStack.Date.Chinese.ChineseSolarTerms.BeginningOfSpring">
            <summary>
            立春
            </summary>
        </member>
        <member name="F:CosmosStack.Date.Chinese.ChineseSolarTerms.RainWater">
            <summary>
            雨水
            </summary>
        </member>
        <member name="F:CosmosStack.Date.Chinese.ChineseSolarTerms.TheWakingOfInsects">
            <summary>
            惊蛰
            </summary>
        </member>
        <member name="F:CosmosStack.Date.Chinese.ChineseSolarTerms.VernalEquinox">
            <summary>
            春分
            </summary>
        </member>
        <member name="F:CosmosStack.Date.Chinese.ChineseSolarTerms.QingmingFestival">
            <summary>
            清明
            </summary>
        </member>
        <member name="F:CosmosStack.Date.Chinese.ChineseSolarTerms.GrainRain">
            <summary>
            谷雨
            </summary>
        </member>
        <member name="F:CosmosStack.Date.Chinese.ChineseSolarTerms.BeginningOfSummer">
            <summary>
            立夏
            </summary>
        </member>
        <member name="F:CosmosStack.Date.Chinese.ChineseSolarTerms.GrainFull">
            <summary>
            小满
            </summary>
        </member>
        <member name="F:CosmosStack.Date.Chinese.ChineseSolarTerms.GrainInEar">
            <summary>
            芒种
            </summary>
        </member>
        <member name="F:CosmosStack.Date.Chinese.ChineseSolarTerms.SummerSolstice">
            <summary>
            夏至
            </summary>
        </member>
        <member name="F:CosmosStack.Date.Chinese.ChineseSolarTerms.SlightHeat">
            <summary>
            小暑
            </summary>
        </member>
        <member name="F:CosmosStack.Date.Chinese.ChineseSolarTerms.GreatHeat">
            <summary>
            大暑
            </summary>
        </member>
        <member name="F:CosmosStack.Date.Chinese.ChineseSolarTerms.BeginningOfAutumn">
            <summary>
            立秋
            </summary>
        </member>
        <member name="F:CosmosStack.Date.Chinese.ChineseSolarTerms.TheLimitOfHeat">
            <summary>
            处暑
            </summary>
        </member>
        <member name="F:CosmosStack.Date.Chinese.ChineseSolarTerms.WhiteDew">
            <summary>
            白露
            </summary>
        </member>
        <member name="F:CosmosStack.Date.Chinese.ChineseSolarTerms.AutumnalEquinox">
            <summary>
            秋分
            </summary>
        </member>
        <member name="F:CosmosStack.Date.Chinese.ChineseSolarTerms.ColdDew">
            <summary>
            寒露
            </summary>
        </member>
        <member name="F:CosmosStack.Date.Chinese.ChineseSolarTerms.FrostsDescent">
            <summary>
            霜降
            </summary>
        </member>
        <member name="F:CosmosStack.Date.Chinese.ChineseSolarTerms.BeginningOfWinter">
            <summary>
            立冬
            </summary>
        </member>
        <member name="F:CosmosStack.Date.Chinese.ChineseSolarTerms.SlightSnow">
            <summary>
            小雪
            </summary>
        </member>
        <member name="F:CosmosStack.Date.Chinese.ChineseSolarTerms.GreatSnow">
            <summary>
            大雪
            </summary>
        </member>
        <member name="F:CosmosStack.Date.Chinese.ChineseSolarTerms.WinterSolstice">
            <summary>
            冬至
            </summary>
        </member>
        <member name="F:CosmosStack.Date.Chinese.ChineseSolarTerms.SlightCold">
            <summary>
            小寒
            </summary>
        </member>
        <member name="F:CosmosStack.Date.Chinese.ChineseSolarTerms.GreatCold">
            <summary>
            大寒
            </summary>
        </member>
        <member name="T:CosmosStack.Date.Chinese.CosmosChineseSolarTermsExtensions">
            <summary>
            CosmosStack Chinese Solar Terms Extensions<br />
            节气扩展
            </summary>
        </member>
        <member name="M:CosmosStack.Date.Chinese.CosmosChineseSolarTermsExtensions.GetName(CosmosStack.Date.Chinese.ChineseSolarTerms,System.Boolean)">
            <summary>
            Get Chinese name<br />
            获取中文名称
            </summary>
            <param name="chineseSolarTerms"></param>
            <param name="traditionalChineseCharacters"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.CosmosChineseSolarTermsExtensions.GetEnglishName(CosmosStack.Date.Chinese.ChineseSolarTerms)">
            <summary>
            Get English name<br />
            获取英文名称
            </summary>
            <param name="chineseSolarTerms"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Date.Chinese.CosmosDateInfoLeapExtensions">
            <summary>
            CosmosStack <see cref="T:CosmosStack.Date.DateInfo"/> leap extensions.
            </summary>
        </member>
        <member name="M:CosmosStack.Date.Chinese.CosmosDateInfoLeapExtensions.IsLeapYear(CosmosStack.Date.DateInfo)">
            <summary>
            Determine whether the specified year is a leap year.<br />
            判断指定的年份是否为闰年。
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.CosmosDateInfoLeapExtensions.IsLeapYear(CosmosStack.Date.DateInfo,System.Globalization.ChineseLunisolarCalendar)">
            <summary>
            Determine whether the specified year is a leap year.<br />
            判断指定的年份是否为闰年。
            </summary>
            <param name="d"></param>
            <param name="calendar"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.CosmosDateInfoLeapExtensions.IsLeapMonth(CosmosStack.Date.DateInfo)">
            <summary>
            Determine whether the specified month is a leap month.<br />
            判断指定的月份是否为闰月。
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.CosmosDateInfoLeapExtensions.IsLeapMonth(CosmosStack.Date.DateInfo,System.Globalization.ChineseLunisolarCalendar)">
            <summary>
            Determine whether the specified month is a leap month.<br />
            判断指定的月份是否为闰月。
            </summary>
            <param name="d"></param>
            <param name="calendar"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.CosmosDateInfoLeapExtensions.IsLeapDay(CosmosStack.Date.DateInfo)">
            <summary>
            Determine whether the specified day is a leap day.<br />
            判断指定的日是否为闰日。
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.CosmosDateInfoLeapExtensions.IsLeapDay(CosmosStack.Date.DateInfo,System.Globalization.ChineseLunisolarCalendar)">
            <summary>
            Determine whether the specified day is a leap day.<br />
            判断指定的日是否为闰日。
            </summary>
            <param name="d"></param>
            <param name="calendar"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Date.Chinese.CosmosDateTimeLeapExtensions">
            <summary>
            CosmosStack <see cref="T:System.DateTime"/> leap extensions.
            </summary>
        </member>
        <member name="M:CosmosStack.Date.Chinese.CosmosDateTimeLeapExtensions.IsLeapYear(System.DateTime)">
            <summary>
            Determine whether the specified year is a leap year.<br />
            判断指定的年份是否为闰年。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.CosmosDateTimeLeapExtensions.IsLeapYear(System.DateTime,System.Globalization.ChineseLunisolarCalendar)">
            <summary>
            Determine whether the specified year is a leap year.<br />
            判断指定的年份是否为闰年。
            </summary>
            <param name="dt"></param>
            <param name="calendar"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.CosmosDateTimeLeapExtensions.IsLeapMonth(System.DateTime)">
            <summary>
            Determine whether the specified month is a leap month.<br />
            判断指定的月份是否为闰月。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.CosmosDateTimeLeapExtensions.IsLeapMonth(System.DateTime,System.Globalization.ChineseLunisolarCalendar)">
            <summary>
            Determine whether the specified month is a leap month.<br />
            判断指定的月份是否为闰月。
            </summary>
            <param name="dt"></param>
            <param name="calendar"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.CosmosDateTimeLeapExtensions.IsLeapDay(System.DateTime)">
            <summary>
            Determine whether the specified day is a leap day.<br />
            判断指定的日是否为闰日。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Chinese.CosmosDateTimeLeapExtensions.IsLeapDay(System.DateTime,System.Globalization.ChineseLunisolarCalendar)">
            <summary>
            Determine whether the specified day is a leap day.<br />
            判断指定的日是否为闰日。
            </summary>
            <param name="dt"></param>
            <param name="calendar"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Date.ConstellationExtensions">
            <summary>
            CosmosStack <see cref="T:System.DateTime"/> Constellation extensions
            </summary>
        </member>
        <member name="M:CosmosStack.Date.ConstellationExtensions.GetConstellationName(CosmosStack.Date.DateInfo)">
            <summary>
            Gets Constellation name<br />
            获取星座名
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.ConstellationExtensions.GetConstellationName(System.DateTime)">
            <summary>
            Gets Constellation name<br />
            获取星座名
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Date.ConstellationHelper">
            <summary>
            CosmosStack Constellation helper<br />
            星座辅助类
            </summary>
        </member>
        <member name="M:CosmosStack.Date.ConstellationHelper.Get(System.DateTime)">
            <summary>
            Gets Constellation name<br />
            获取星座名
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Date.DateInfo">
            <summary>
            DateInfo
            </summary>
            <summary>
            DateInfo
            </summary>
        </member>
        <member name="M:CosmosStack.Date.DateInfo.#ctor(System.DateTime)">
            <summary>
            Create a new instance of <see cref="T:CosmosStack.Date.DateInfo"/>.<br />
            创建一个新的 <see cref="T:CosmosStack.Date.DateInfo"/> 实例。
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:CosmosStack.Date.DateInfo.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Create a new instance of <see cref="T:CosmosStack.Date.DateInfo"/>.<br />
            创建一个新的 <see cref="T:CosmosStack.Date.DateInfo"/> 实例。
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
        </member>
        <member name="P:CosmosStack.Date.DateInfo.Year">
            <summary>
            Year<br />
            年
            </summary>
        </member>
        <member name="P:CosmosStack.Date.DateInfo.Month">
            <summary>
            Month<br />
            月份
            </summary>
        </member>
        <member name="P:CosmosStack.Date.DateInfo.Day">
            <summary>
            Day<br />
            日
            </summary>
        </member>
        <member name="P:CosmosStack.Date.DateInfo.Ticks">
            <summary>
            Ticks<br />
            获取表示此实例的日期的计时周期数。
            </summary>
        </member>
        <member name="M:CosmosStack.Date.DateInfo.ToDateTime">
            <summary>
            Convert to <see cref="T:System.DateTime"/><br />
            转换为 <see cref="T:System.DateTime"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfo.ToLocalDate">
            <summary>
            Convert to <see cref="T:NodaTime.LocalDate"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfo.ToLocalDateTime">
            <summary>
            Convert to <see cref="T:NodaTime.LocalDateTime"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfo.AddDays(System.Int32)">
            <summary>
            Add days<br />
            添加天数
            </summary>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfo.AddMonths(System.Int32)">
            <summary>
            Add months<br />
            添加月份
            </summary>
            <param name="months"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfo.AddYears(System.Int32)">
            <summary>
            Add years<br />
            添加年份
            </summary>
            <param name="years"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfo.AddDuration(NodaTime.Duration)">
            <summary>
            Add duration<br />
            添加一段时间段
            </summary>
            <param name="duration"></param>
            <returns></returns>
        </member>
        <member name="P:CosmosStack.Date.DateInfo.DayOfWeek">
            <summary>
            Gets day of week
            </summary>
        </member>
        <member name="M:CosmosStack.Date.DateInfo.op_Implicit(CosmosStack.Date.DateInfo)~System.DateTime">
            <summary>
            Convert <see cref="T:System.DateTime"/> to <see cref="T:CosmosStack.Date.DateInfo"/><br />
            将 <see cref="T:System.DateTime"/> 转换为 <see cref="T:CosmosStack.Date.DateInfo"/>。
            </summary>
            <param name="di"></param>
        </member>
        <member name="M:CosmosStack.Date.DateInfo.op_Implicit(System.DateTime)~CosmosStack.Date.DateInfo">
            <summary>
            Convert <see cref="T:CosmosStack.Date.DateInfo"/> to <see cref="T:System.DateTime"/><br />
            将 <see cref="T:CosmosStack.Date.DateInfo"/> 转换为 <see cref="T:System.DateTime"/>。
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:CosmosStack.Date.DateInfo.op_Addition(CosmosStack.Date.DateInfo,System.TimeSpan)">
            <summary>
            +
            </summary>
            <param name="d"></param>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfo.op_Subtraction(CosmosStack.Date.DateInfo,System.TimeSpan)">
            <summary>
            -
            </summary>
            <param name="d"></param>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfo.op_GreaterThan(CosmosStack.Date.DateInfo,CosmosStack.Date.DateInfo)">
            <summary>
            &gt;
            </summary>
            <param name="d1"></param>
            <param name="d2"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfo.op_GreaterThan(CosmosStack.Date.DateInfo,System.DateTime)">
            <summary>
            &gt;
            </summary>
            <param name="d"></param>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfo.op_LessThan(CosmosStack.Date.DateInfo,CosmosStack.Date.DateInfo)">
            <summary>
            &lt;
            </summary>
            <param name="d1"></param>
            <param name="d2"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfo.op_LessThan(CosmosStack.Date.DateInfo,System.DateTime)">
            <summary>
            &lt;
            </summary>
            <param name="d"></param>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfo.op_GreaterThanOrEqual(CosmosStack.Date.DateInfo,CosmosStack.Date.DateInfo)">
            <summary>
            &gt;=
            </summary>
            <param name="d1"></param>
            <param name="d2"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfo.op_GreaterThanOrEqual(CosmosStack.Date.DateInfo,System.DateTime)">
            <summary>
            &gt;=
            </summary>
            <param name="d"></param>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfo.op_LessThanOrEqual(CosmosStack.Date.DateInfo,CosmosStack.Date.DateInfo)">
            <summary>
            &lt;=
            </summary>
            <param name="d1"></param>
            <param name="d2"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfo.op_LessThanOrEqual(CosmosStack.Date.DateInfo,System.DateTime)">
            <summary>
            &lt;=
            </summary>
            <param name="d"></param>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfo.op_Equality(CosmosStack.Date.DateInfo,CosmosStack.Date.DateInfo)">
            <summary>
            ==
            </summary>
            <param name="d1"></param>
            <param name="d2"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfo.op_Equality(CosmosStack.Date.DateInfo,System.DateTime)">
            <summary>
            ==
            </summary>
            <param name="d"></param>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfo.op_Inequality(CosmosStack.Date.DateInfo,CosmosStack.Date.DateInfo)">
            <summary>
            !=
            </summary>
            <param name="d1"></param>
            <param name="d2"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfo.op_Inequality(CosmosStack.Date.DateInfo,System.DateTime)">
            <summary>
            !=
            </summary>
            <param name="d"></param>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfo.Equals(System.Object)">
            <summary>
            Equals<br />
            相等
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfo.GetHashCode">
            <summary>
            Get hashcode<br />
            获取哈希值
            </summary>
            <returns></returns>
        </member>
        <member name="P:CosmosStack.Date.DateInfo.InfiniteFuture">
            <summary>
            To get an instance of Infinite Future Info.
            </summary>
        </member>
        <member name="P:CosmosStack.Date.DateInfo.InfinitePast">
            <summary>
            To get an instance of Infinite Past Info.
            </summary>
        </member>
        <member name="M:CosmosStack.Date.DateInfoCalc.OffsetByDays(CosmosStack.Date.DateInfo,System.Int32)">
            <summary>
            Add days. <br />
            添加一个季度。
            </summary>
            <param name="di"></param>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoCalc.OffsetByWeek(System.Int32,System.Int32,System.Int32,System.DayOfWeek)">
            <summary>
            Create <see cref="T:CosmosStack.Date.DateInfo"/> by special year, month and offset info.<br />
            根据指定的年月和偏移信息创建 <see cref="T:CosmosStack.Date.DateInfo"/>
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="weekAtMonth"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoCalc.OffsetByWeek(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Create <see cref="T:CosmosStack.Date.DateInfo"/> by special year, month and offset info.<br />
            根据指定的年月和偏移信息创建 <see cref="T:CosmosStack.Date.DateInfo"/>
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="weekAtMonth"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoCalc.TryOffsetByWeek(System.Int32,System.Int32,System.Int32,System.DayOfWeek,CosmosStack.Date.DateInfo@)">
            <summary>
            Create <see cref="T:CosmosStack.Date.DateInfo"/> by special year, month and offset info.<br />
            根据指定的年月和偏移信息创建 <see cref="T:CosmosStack.Date.DateInfo"/>
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="weekAtMonth"></param>
            <param name="dayOfWeek"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoCalc.TryOffsetByWeek(System.Int32,System.Int32,System.Int32,System.Int32,CosmosStack.Date.DateInfo@)">
            <summary>
            Create <see cref="T:CosmosStack.Date.DateInfo"/> by special year, month and offset info.<br />
            根据指定的年月和偏移信息创建 <see cref="T:CosmosStack.Date.DateInfo"/>
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="weekAtMonth"></param>
            <param name="dayOfWeek"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoCalc.OffsetByWeeks(CosmosStack.Date.DateInfo,System.Int32)">
            <summary>
            Add weeks. <br />
            偏移一个星期。
            </summary>
            <param name="dt"></param>
            <param name="weeks"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Date.DateInfoCalc.OffsetByWeekBefore(CosmosStack.Date.DateInfo,System.DayOfWeek)">
            <summary>
            Find the next weekday for example Monday before a special date.<br />
            根据指定的日期，获得上一个工作日（如周一）
            </summary>
            <param name="dt"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoCalc.OffsetByWeekAfter(CosmosStack.Date.DateInfo,System.DayOfWeek)">
            <summary>
            Find the next weekday for example Monday from a special date.<br />
            根据指定的日期，获得下一个工作日（如周一）
            </summary>
            <param name="dt"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoCalc.OffsetByMonths(CosmosStack.Date.DateInfo,System.Int32,CosmosStack.Date.DateTimeOffsetOptions)">
            <summary>
            Add quarters. <br />
            添加一个季度。
            </summary>
            <param name="dt"></param>
            <param name="months"></param>
            <param name="options"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Date.DateInfoCalc.OffsetByQuarters(CosmosStack.Date.DateInfo,System.Int32,CosmosStack.Date.DateTimeOffsetOptions)">
            <summary>
            Add quarters. <br />
            添加一个季度。
            </summary>
            <param name="dt"></param>
            <param name="quarters"></param>
            <param name="options"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Date.DateInfoCalc.OffsetByYears(CosmosStack.Date.DateInfo,System.Int32,CosmosStack.Date.DateTimeOffsetOptions)">
            <summary>
            Add years. <br />
            添加一个季度。
            </summary>
            <param name="dt"></param>
            <param name="years"></param>
            <param name="options"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:CosmosStack.Date.DateInfoExtensions">
            <summary>
            CosmosStack <see cref="T:CosmosStack.Date.DateInfo"/> extensions.
            </summary>
            <summary>
            CosmosStack <see cref="T:CosmosStack.Date.DateInfo"/> extensions.
            </summary>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.AddWeeks(CosmosStack.Date.DateInfo,System.Int32)">
            <summary>
            Add weeks. <br />
            加一周
            </summary>
            <param name="d"></param>
            <param name="weeks"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.AddQuarters(CosmosStack.Date.DateInfo,System.Int32)">
            <summary>
            Add quarters
            </summary>
            <param name="d"></param>
            <param name="quarters"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.AddBusinessDays(CosmosStack.Date.DateInfo,System.Int32)">
            <summary>
            Add business days<br />
            添加指定个数量的工作日
            </summary>
            <param name="d"></param>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.ToAgo(CosmosStack.Date.DateInfo)">
            <summary>
            To ago.<br />
            转换为 Ago
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.IsBetween(CosmosStack.Date.DateInfo,CosmosStack.Date.DateInfo,CosmosStack.Date.DateInfo,System.Boolean)">
            <summary>
            Is current date between <paramref name="from"/> and <paramref name="to"/>.<br />
            判断当前日期是否在 from 和 to 之间
            </summary>
            <param name="d"></param>
            <param name="from"></param>
            <param name="to"></param>
            <param name="includeBoundary"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.IsDateBetweenWithBoundary(CosmosStack.Date.DateInfo,CosmosStack.Date.DateInfo,CosmosStack.Date.DateInfo)">
            <summary>
            Is current date between <paramref name="min"/> and <paramref name="max"/> with boundary.<br />
            判断当前日期是否在 min 和 max 之间，闭包区间。
            </summary>
            <param name="d"></param>
            <param name="min"></param>
            <param name="max"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.IsDateBetweenWithoutBoundary(CosmosStack.Date.DateInfo,CosmosStack.Date.DateInfo,CosmosStack.Date.DateInfo)">
            <summary>
            Is current date between <paramref name="min"/> and <paramref name="max"/> without boundary.<br />
            判断当前日期是否在 min 和 max 之间，开区间。
            </summary>
            <param name="d"></param>
            <param name="min"></param>
            <param name="max"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.Clone(CosmosStack.Date.DateInfo)">
            <summary>
            Clone<br />
            克隆
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.IsNextMatched(CosmosStack.Date.DateInfo,CosmosStack.Date.DateInfo)">
            <summary>
            Is the nextDay the day after current date.<br />
            判断是否为第二天
            </summary>
            <param name="d"></param>
            <param name="next"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.IsBefore(CosmosStack.Date.DateInfo,CosmosStack.Date.DateInfo)">
            <summary>
            Determine whether the specified time is in the past relative to the specified time. <br />
            判断指定时间是否是相对给定时间的过去。
            </summary>
            <param name="d"></param>
            <param name="toCompareWith"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.IsAfter(CosmosStack.Date.DateInfo,CosmosStack.Date.DateInfo)">
            <summary>
            Determine whether the specified time is in the future relative to the specified time. <br />
            判断指定时间是否是相对给定时间的未来。
            </summary>
            <param name="d"></param>
            <param name="toCompareWith"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.IsInTheFuture(CosmosStack.Date.DateInfo)">
            <summary>
            Determine whether the given time is in the future. <br />
            判断给定的时间是否在未来。
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.IsInThePast(CosmosStack.Date.DateInfo)">
            <summary>
            Determine whether the given time is in the past. <br />
            判断给定的时间是否在过去。
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.IsSameDay(CosmosStack.Date.DateInfo,CosmosStack.Date.DateInfo)">
            <summary>
            Determine whether it is in the same day. <br />
            判断是否在同一天。
            </summary>
            <param name="d"></param>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.IsSameMonth(CosmosStack.Date.DateInfo,CosmosStack.Date.DateInfo)">
            <summary>
            Determine whether it is in the same month. <br />
            判断是否在同一个月。
            </summary>
            <param name="d"></param>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.IsSameYear(CosmosStack.Date.DateInfo,CosmosStack.Date.DateInfo)">
            <summary>
            Determine whether it is in the same year. <br />
            判断是否在同一年。
            </summary>
            <param name="d"></param>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.SetDate(CosmosStack.Date.DateInfo,System.Int32)">
            <summary>
            Set the year of the date. <br />
            设置日期的年份。
            </summary>
            <param name="d"></param>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.SetDate(CosmosStack.Date.DateInfo,System.Int32,System.Int32)">
            <summary>
            Set the year and month of the date. <br />
            设置日期的年份和月份。
            </summary>
            <param name="d"></param>
            <param name="year"></param>
            <param name="month"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.SetDate(CosmosStack.Date.DateInfo,System.Int32,System.Int32,System.Int32)">
            <summary>
            Set the year, month and day of the date. <br />
            设置日期的年月日。
            </summary>
            <param name="d"></param>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.SetYear(CosmosStack.Date.DateInfo,System.Int32)">
            <summary>
            Set the year of the date. <br />
            设置日期的年份。
            </summary>
            <param name="d"></param>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.SetMonth(CosmosStack.Date.DateInfo,System.Int32)">
            <summary>
            Set the month of the date. <br />
            设置日期的月份。
            </summary>
            <param name="d"></param>
            <param name="month"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.SetDay(CosmosStack.Date.DateInfo,System.Int32)">
            <summary>
            Set the day of the date. <br />
            设置日期的具体的那一天。
            </summary>
            <param name="d"></param>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.BeginningOfWeek(CosmosStack.Date.DateInfo)">
            <summary>
            Beginning of week, same as 'GetFirstDayInfoOfWeek'. <br />
            一周的开始日期，等价于 'GetFirstDayInfoOfWeek'。
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.BeginningOfMonth(CosmosStack.Date.DateInfo)">
            <summary>
            Beginning of month, same as 'GetLastDayInfoOfMonth'. <br />
            一个月的开始日期，等价于 'GetLastDayInfoOfMonth'。
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.BeginningOfQuarter(CosmosStack.Date.DateInfo)">
            <summary>
            Beginning of quarter, same as 'GetFirstDayInfoOfQuarter'. <br />
            一个季度的开始日期，等价于 'GetFirstDayInfoOfQuarter'。
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.BeginningOfYear(CosmosStack.Date.DateInfo)">
            <summary>
            Beginning of year, same as 'GetFirstDayInfoOfYear'. <br />
            一年的开始日期，等价于 'GetFirstDayInfoOfYear'。
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.EndOfWeek(CosmosStack.Date.DateInfo)">
            <summary>
            End of week, same as 'GetLastDayInfoOfWeek'. <br />
            一周的结束日期，等价于 'GetLastDayInfoOfWeek'。
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.EndOfMonth(CosmosStack.Date.DateInfo)">
            <summary>
            End of month, same as 'GetLastDayInfoOfMonth'. <br />
            一个月份的结束日期，等价于 'GetLastDayInfoOfMonth'。
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.EndOfQuarter(CosmosStack.Date.DateInfo)">
            <summary>
            End of quarter, same as 'GetLastDayInfoOfQuarter'. <br />
            一个季度的结束日期，等价于 'GetLastDayInfoOfQuarter'。
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.EndOfYear(CosmosStack.Date.DateInfo)">
            <summary>
            End of year, same as 'GetLastDayOfYear'. <br />
            一年的结束日期，等价于 'GetLastDayOfYear'。
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.FirstDayOfYear(CosmosStack.Date.DateInfo)">
            <summary>
            Get first day of this year. <br />
            获取本年度的第一天。
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.FirstDayOfYear(CosmosStack.Date.DateInfo,System.DayOfWeek)">
            <summary>
            Get first day of this year. <br />
            获取本年度的第一天。
            </summary>
            <param name="d"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.FirstDayOfQuarter(CosmosStack.Date.DateInfo)">
            <summary>
            Get first day of this quarter. <br />
            获取本季度的第一天。
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.FirstDayOfQuarter(CosmosStack.Date.DateInfo,System.DayOfWeek)">
            <summary>
            Get first day of this quarter. <br />
            获取本季度的第一天。
            </summary>
            <param name="d"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.FirstDayOfMonth(CosmosStack.Date.DateInfo)">
            <summary>
            Get first day of this month. <br />
            获取本月份的第一天。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.FirstDayOfMonth(CosmosStack.Date.DateInfo,System.DayOfWeek)">
            <summary>
            Get first day of (the week of) this month. <br />
            获取本月份第一周的第一天。
            </summary>
            <param name="d"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.FirstDayOfWeek(CosmosStack.Date.DateInfo)">
            <summary>
            Get first day of this week. <br />
            获取本周的第一天。
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.FirstDayOfWeek(CosmosStack.Date.DateInfo,System.Globalization.CultureInfo)">
            <summary>
            Get first day of this week. <br />
            获取本周的第一天。
            </summary>
            <param name="d"></param>
            <param name="cultureInfo"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.LastDayOfYear(CosmosStack.Date.DateInfo)">
            <summary>
            Get last day info of year. <br />
            获取本年度的最后一天。
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.LastDayOfYear(CosmosStack.Date.DateInfo,System.DayOfWeek)">
            <summary>
            Get last day info of year. <br />
            获取本年度的最后一天。
            </summary>
            <param name="d"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.LastDayOfQuarter(CosmosStack.Date.DateInfo)">
            <summary>
            Gets last day info of quarter. <br />
            获取本季节的最后一天。
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.LastDayOfQuarter(CosmosStack.Date.DateInfo,System.DayOfWeek)">
            <summary>
            Gets last day info of quarter. <br />
            获取本季节的最后一天。
            </summary>
            <param name="d"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.LastDayOfMonth(CosmosStack.Date.DateInfo)">
            <summary>
            Get last day of this month. <br />
            获取本月份的最后一天。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.LastDayOfMonth(CosmosStack.Date.DateInfo,System.DayOfWeek)">
            <summary>
            Get last day (of week) of this month. <br />
            获取本月份最后一周的最后一天。
            </summary>
            <param name="d"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.LastDayOfWeek(CosmosStack.Date.DateInfo)">
            <summary>
            Get last day of this week. <br />
            获取本周的最后一天。
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.LastDayOfWeek(CosmosStack.Date.DateInfo,System.Globalization.CultureInfo)">
            <summary>
            Get last day of this week. <br />
            获取本周的最后一天。
            </summary>
            <param name="d"></param>
            <param name="cultureInfo"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.GetWeekOfYear(CosmosStack.Date.DateInfo)">
            <summary>
            Get the specified week is the week of the year.<br />
            获取指定的星期是一年中的第几个星期。
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.GetWeekOfYear(CosmosStack.Date.DateInfo,System.Globalization.CalendarWeekRule)">
            <summary>
            Get the specified week is the week of the year.<br />
            获取指定的星期是一年中的第几个星期。
            </summary>
            <param name="d"></param>
            <param name="weekRule"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.GetWeekOfYear(CosmosStack.Date.DateInfo,System.DayOfWeek)">
            <summary>
            Get the specified week is the week of the year.<br />
            获取指定的星期是一年中的第几个星期。
            </summary>
            <param name="d"></param>
            <param name="firstDayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.GetWeekOfYear(CosmosStack.Date.DateInfo,System.Globalization.CalendarWeekRule,System.DayOfWeek)">
            <summary>
            Get the specified week is the week of the year.<br />
            获取指定的星期是一年中的第几个星期。
            </summary>
            <param name="d"></param>
            <param name="weekRule"></param>
            <param name="firstDayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.DaysInMonth(CosmosStack.Date.DateInfo)">
            <summary>
            Get the days' count of the specified month.<br />
            获取指定月份是总天数。
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.DaysInYear(CosmosStack.Date.DateInfo)">
            <summary>
            Get the days' count of the specified year.<br />
            获取指定月份是总天数。
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.QuarterOfMonth(CosmosStack.Date.DateInfo)">
            <summary>
            Get the quarter of the specified month.<br />
            获取指定月份是第几季度。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.NextYear(CosmosStack.Date.DateInfo)">
            <summary>
            According to the specified time, get the day of the next year.<br />
            根据指定的时间，获取下一年的当天。
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.PreviousYear(CosmosStack.Date.DateInfo)">
            <summary>
            According to the specified time, get the day of the previous year.<br />
            根据指定的时间，获取上一年的当天。
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.NextQuarter(CosmosStack.Date.DateInfo)">
            <summary>
            Gets next quarter
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.PreviousQuarter(CosmosStack.Date.DateInfo)">
            <summary>
            Gets previous quarter
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.NextMonth(CosmosStack.Date.DateInfo)">
            <summary>
            Gets next month
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.PreviousMonth(CosmosStack.Date.DateInfo)">
            <summary>
            Gets previous month
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.NextWeek(CosmosStack.Date.DateInfo)">
            <summary>
            Next week
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.PreviousWeek(CosmosStack.Date.DateInfo)">
            <summary>
            Previous week
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.NextDay(CosmosStack.Date.DateInfo)">
            <summary>
            Next day
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.PreviousDay(CosmosStack.Date.DateInfo)">
            <summary>
            Previous Day
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.Tomorrow(CosmosStack.Date.DateInfo)">
            <summary>
            Tomorrow
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.Yesterday(CosmosStack.Date.DateInfo)">
            <summary>
            Yesterday
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.NextDayOfWeek(CosmosStack.Date.DateInfo,System.DayOfWeek)">
            <summary>
            Next, same as 'GetNextWeekdayInfo'.<br />
            获取下一个工作日。
            </summary>
            <param name="d"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoExtensions.PreviousDayOfWeek(CosmosStack.Date.DateInfo,System.DayOfWeek)">
            <summary>
            Previous, same as 'GetPreviousWeekdayInfo'.<br />
            获取上一个工作日。
            </summary>
            <param name="d"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoFactory.Today">
            <summary>
            Today<br />
            今天
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoFactory.Tomorrow">
            <summary>
            Today<br />
            Tomorrow
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoFactory.Yesterday">
            <summary>
            Today<br />
            Yesterday
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoFactory.Create(System.Int32,System.Int32,System.Int32)">
            <summary>
            Create <see cref="T:CosmosStack.Date.DateInfo"/> by special date.<br />
            根据指定的日期创建 <see cref="T:CosmosStack.Date.DateInfo"/>
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoFactory.CreateLastDayOfMonth(System.Int32,System.Int32)">
            <summary>
            To get the latest weekday for example Monday in a month.<br />
            寻找一个月中的最后一个日期
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoFactory.CreateLastDayOfMonth(System.Int32,System.Int32,System.DayOfWeek)">
            <summary>
            To get the latest weekday for example Monday in a month.<br />
            寻找一个月中的最后一个工作日（如周一）
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoFactory.CreateLastDayOfMonth(System.Int32,System.Int32,System.Int32)">
            <summary>
            To get the latest weekday for example Monday in a month.<br />
            寻找一个月中的最后一个工作日（如周一）
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoFactory.CreateFirstDayOfMonth(System.Int32,System.Int32)">
            <summary>
            To get the first weekday for example Monday in a month.<br />
            寻找一个月中的最后一个日期
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoFactory.CreateFirstDayOfMonth(System.Int32,System.Int32,System.DayOfWeek)">
            <summary>
            To get the first weekday for example Monday in a month.<br />
            寻找一个月中的最后一个日期
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoFactory.CreateFirstDayOfMonth(System.Int32,System.Int32,System.Int32)">
            <summary>
            To get the first weekday for example Monday in a month.<br />
            寻找一个月中的最后一个日期
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoFactory.CreateNextDayByWeek(System.Int32,System.Int32,System.Int32,System.DayOfWeek)">
            <summary>
            Find the next weekday for example Monday from a special date.<br />
            根据指定的日期，获得下一个工作日（如周一）
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoFactory.CreateNextDayByWeek(CosmosStack.Date.DateInfo,System.DayOfWeek)">
            <summary>
            Find the next weekday for example Monday from a special date.<br />
            根据指定的日期，获得下一个工作日（如周一）
            </summary>
            <param name="dt"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoFactory.CreatePreviousDayByWeek(System.Int32,System.Int32,System.Int32,System.DayOfWeek)">
            <summary>
            Find the next weekday for example Monday before a special date.<br />
            根据指定的日期，获得上一个工作日（如周一）
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoFactory.CreatePreviousDayByWeek(CosmosStack.Date.DateInfo,System.DayOfWeek)">
            <summary>
            Find the next weekday for example Monday before a special date.<br />
            根据指定的日期，获得上一个工作日（如周一）
            </summary>
            <param name="dt"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoFactory.CreateByWeek(System.Int32,System.Int32,System.DayOfWeek,System.Int32)">
            <summary>
            Find for example the 3th Monday in a month.<br />
            寻找指定的日期（如一个月的第三个周一）
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="dayOfWeek"></param>
            <param name="occurrence"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateJudge.IsToday(System.DateTime)">
            <summary>
            To judge whether the day is today.
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateJudge.IsToday(System.Nullable{System.DateTime})">
            <summary>
            To judge whether the day is today.
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateJudge.IsToday(System.DateTimeOffset)">
            <summary>
            To judge whether the day is today.
            </summary>
            <param name="dtOffset"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateJudge.IsToday(System.Nullable{System.DateTimeOffset})">
            <summary>
            To judge whether the day is today.
            </summary>
            <param name="dtOffset"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateJudge.IsWeekend(System.DateTime)">
            <summary>
            To judge whether the day is weekend.
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateJudge.IsWeekend(System.Nullable{System.DateTime})">
            <summary>
            To judge whether the day is weekend.
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateJudge.IsWeekday(System.DateTime)">
            <summary>
            To judge whether the day is weekday.
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateJudge.IsWeekday(System.Nullable{System.DateTime})">
            <summary>
            To judge whether the day is weekday.
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeCalc.OffsetBySeconds(System.DateTime,System.Int32)">
            <summary>
            Add seconds. <br />
            添加一个季度。
            </summary>
            <param name="dt"></param>
            <param name="seconds"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Date.DateTimeCalc.OffsetByMinutes(System.DateTime,System.Int32)">
            <summary>
            Add minutes. <br />
            添加一个季度。
            </summary>
            <param name="dt"></param>
            <param name="minutes"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Date.DateTimeCalc.OffsetByHours(System.DateTime,System.Int32)">
            <summary>
            Add hours. <br />
            添加一个季度。
            </summary>
            <param name="dt"></param>
            <param name="hours"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Date.DateTimeCalc.OffsetByDays(System.DateTime,System.Int32)">
            <summary>
            Add days. <br />
            添加一个季度。
            </summary>
            <param name="dt"></param>
            <param name="days"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Date.DateTimeCalc.OffsetByWeek(System.Int32,System.Int32,System.Int32,System.DayOfWeek)">
            <summary>
            Create <see cref="T:System.DateTime"/> by special year, month and offset info.<br />
            根据指定的年月和偏移信息创建 <see cref="T:System.DateTime"/>
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="weekAtMonth"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeCalc.OffsetByWeek(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Create <see cref="T:System.DateTime"/> by special year, month and offset info.<br />
            根据指定的年月和偏移信息创建 <see cref="T:System.DateTime"/>
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="weekAtMonth"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeCalc.TryOffsetByWeek(System.Int32,System.Int32,System.Int32,System.DayOfWeek,System.DateTime@)">
            <summary>
            Create <see cref="T:System.DateTime"/> by special year, month and offset info.<br />
            根据指定的年月和偏移信息创建 <see cref="T:System.DateTime"/>
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="weekAtMonth"></param>
            <param name="dayOfWeek"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeCalc.TryOffsetByWeek(System.Int32,System.Int32,System.Int32,System.Int32,System.DateTime@)">
            <summary>
            Create <see cref="T:System.DateTime"/> by special year, month and offset info.<br />
            根据指定的年月和偏移信息创建 <see cref="T:System.DateTime"/>
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="weekAtMonth"></param>
            <param name="dayOfWeek"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeCalc.OffsetByWeeks(System.DateTime,System.Int32)">
            <summary>
            Add weeks. <br />
            偏移一个星期。
            </summary>
            <param name="dt"></param>
            <param name="weeks"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Date.DateTimeCalc.OffsetByWeekBefore(System.DateTime,System.DayOfWeek)">
            <summary>
            Find the next weekday for example Monday before a special date.<br />
            根据指定的日期，获得上一个工作日（如周一）
            </summary>
            <param name="dt"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeCalc.OffsetByWeekAfter(System.DateTime,System.DayOfWeek)">
            <summary>
            Find the next weekday for example Monday from a special date.<br />
            根据指定的日期，获得下一个工作日（如周一）
            </summary>
            <param name="dt"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeCalc.OffsetByMonths(System.DateTime,System.Int32,CosmosStack.Date.DateTimeOffsetOptions)">
            <summary>
            Add quarters. <br />
            添加一个季度。
            </summary>
            <param name="dt"></param>
            <param name="months"></param>
            <param name="options"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Date.DateTimeCalc.OffsetByQuarters(System.DateTime,System.Int32,CosmosStack.Date.DateTimeOffsetOptions)">
            <summary>
            Add quarters. <br />
            添加一个季度。
            </summary>
            <param name="dt"></param>
            <param name="quarters"></param>
            <param name="options"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Date.DateTimeCalc.OffsetByYears(System.DateTime,System.Int32,CosmosStack.Date.DateTimeOffsetOptions)">
            <summary>
            Add years. <br />
            添加一个季度。
            </summary>
            <param name="dt"></param>
            <param name="years"></param>
            <param name="options"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Date.DateTimeCalc.OffsetByDuration(System.DateTime,NodaTime.Duration)">
            <summary>
            Add duration. <br />
            添加一段持续的时间
            </summary>
            <param name="dt"></param>
            <param name="duration"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.AddWeeks(System.DateTime,System.Int32)">
            <summary>
            Add weeks. <br />
            添加一个星期。
            </summary>
            <param name="dt"></param>
            <param name="weeks"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.AddQuarters(System.DateTime,System.Int32)">
            <summary>
            Add quarters. <br />
            添加一个季度。
            </summary>
            <param name="dt"></param>
            <param name="quarters"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.AddDuration(System.DateTime,NodaTime.Duration)">
            <summary>
            Add duration. <br />
            添加一段持续的时间
            </summary>
            <param name="dt"></param>
            <param name="duration"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.AddBusinessDays(System.DateTime,System.Int32)">
            <summary>
            Add business days. <br />
            添加指定个数量的工作日
            </summary>
            <param name="dt"></param>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.ToCalculateAge(System.DateTime)">
            <summary>
            Calculate the current age based on the given birthday time. <br />
            根据给定的生日时间计算当前的年纪。
            </summary>
            <param name="birthday"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.ToCalculateAge(System.DateTime,System.DateTime)">
            <summary>
            Calculate the age relative to another time based on a given birthday time. <br />
            根据生日和参照时间，计算当时年纪
            </summary>
            <param name="birthday">     </param>
            <param name="referenceDate"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.ToAgo(System.TimeSpan)">
            <summary>
            格式化时间间隔
            </summary>
            <param name="timeSpan">时间间隔</param>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.ToAgo(System.DateTime)">
            <summary>
            格式化时间间隔
            </summary>
            <param name="date">對比的時間</param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.Clone(System.DateTime)">
            <summary>
            Clone<br />
            克隆
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.GetMonthDiff(System.DateTime,System.DateTime)">
            <summary>
            Calculate the number of months between two dates.<br />
            计算两个时间之间相差的月份数。
            </summary>
            <param name="dt1"></param>
            <param name="dt2"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.GetTotalMonthDiff(System.DateTime,System.DateTime)">
            <summary>
            Calculate the exact number of months between two dates.<br />
            计算两个日期之间相差的确切月份数。
            </summary>
            <param name="dt1"></param>
            <param name="dt2"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.ElapsedTime(System.DateTime)">
            <summary>
            Elapsed Time<br />
            计算此刻与指定时间之间的时间差
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.ElapsedMilliseconds(System.DateTime)">
            <summary>
            Elapsed Time<br />
            计算此刻与指定时间之间的时间差（毫秒）
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.IsBetween(System.DateTime,System.DateTime,System.DateTime,System.Boolean)">
            <summary>
            Is current date between <paramref name="from"/> and <paramref to="to"/>.<br />
            判断当前日期是否在 from 和 to 之间
            </summary>
            <param name="dt"></param>
            <param name="from"></param>
            <param name="to"></param>
            <param name="includeBoundary"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.IsDateBetweenWithBoundary(System.DateTime,System.DateTime,System.DateTime)">
            <summary>
            Is current date between <paramref name="min"/> and <paramref name="max"/> with boundary.<br />
            判断当前日期是否在 min 和 max 之间，闭包区间。
            </summary>
            <param name="dt"></param>
            <param name="min"></param>
            <param name="max"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.IsDateBetweenWithBoundary(System.DateTime,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Is current date between <paramref name="min"/> and <paramref name="max"/> with boundary.<br />
            判断当前日期是否在 min 和 max 之间，闭包区间。
            </summary>
            <param name="dt"></param>
            <param name="min"></param>
            <param name="max"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.IsDateBetweenWithoutBoundary(System.DateTime,System.DateTime,System.DateTime)">
            <summary>
            Is current date between <paramref name="min"/> and <paramref name="max"/> without boundary.<br />
            判断当前日期是否在 min 和 max 之间，开区间。
            </summary>
            <param name="dt"></param>
            <param name="min"></param>
            <param name="max"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.IsToday(System.DateTime)">
            <summary>
            Determine whether the given time is today. <br />
            判断给定时间是否是今天。
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.IsToday(System.Nullable{System.DateTime})">
            <summary>
            Determine whether the given time is today. <br />
            判断给定时间是否是今天。
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.IsMorning(System.DateTime)">
            <summary>
            Determine whether the given time is morning. <br />
            判断给定时间是否是早晨。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.IsEarlyMorning(System.DateTime)">
            <summary>
            Determine whether the given time is early morning. <br />
            判断给定时间是否是清晨。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.IsAfternoon(System.DateTime)">
            <summary>
            Determine whether the given time is afternoon. <br />
            判断给定时间是否是下午。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.IsDusk(System.DateTime)">
            <summary>
            Determine whether the given time is dusk. <br />
            判断给定时间是否是黄昏。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.IsEvening(System.DateTime)">
            <summary>
            Determine whether the given time is evening. <br />
            判断给定时间是否是夜晚。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.IsBefore(System.DateTime,System.DateTime)">
            <summary>
            Determine whether the specified time is in the past relative to the specified time. <br />
            判断指定时间是否相对给定时间的过去。
            </summary>
            <param name="dt"></param>
            <param name="toCompareWith"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.IsAfter(System.DateTime,System.DateTime)">
            <summary>
            Determine whether the specified time is in the future relative to the specified time. <br />
            判断指定时间是否相对给定时间的未来。
            </summary>
            <param name="dt"></param>
            <param name="toCompareWith"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.IsInTheFuture(System.DateTime)">
            <summary>
            Determine whether the specified time is in the future relative to the specified time. <br />
            判断指定时间是否相对给定时间的未来。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.IsInThePast(System.DateTime)">
            <summary>
            Determine whether the specified time is in the past relative to the specified time. <br />
            判断指定时间是否相对给定时间的过去。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.IsWeekday(System.DateTime)">
            <summary>
            Is Weekday <br />
            判断是否为工作日
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.IsWeekday(System.Nullable{System.DateTime})">
            <summary>
            Is Weekday <br />
            判断是否为工作日
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.IsWeekend(System.DateTime)">
            <summary>
            Is Weekday <br />
            判断是否为周末
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.IsWeekend(System.Nullable{System.DateTime})">
            <summary>
            Is Weekday <br />
            判断是否为周末
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.IsSameDay(System.DateTime,System.DateTime)">
            <summary>
            Is same day
            </summary>
            <param name="dt"></param>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.IsSameMonth(System.DateTime,System.DateTime)">
            <summary>
            Is same month
            </summary>
            <param name="dt"></param>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.IsSameYear(System.DateTime,System.DateTime)">
            <summary>
            Is same year
            </summary>
            <param name="dt"></param>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.IsDateEqual(System.DateTime,System.DateTime)">
            <summary>
            Is date equal...
            </summary>
            <param name="dt"></param>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.IsTimeEqual(System.DateTime,System.DateTime)">
            <summary>
            Is time equal...
            </summary>
            <param name="dt"></param>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.Round(System.DateTime,CosmosStack.Date.RoundTo)">
            <summary>
            Round the time to the nearest value to the given precision. <br />
            将时间四舍五入到最接近给定精度的值。
            </summary>
            <param name="dt"></param>
            <param name="rt"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.ToUtc(System.DateTime)">
            <summary>
            Convert to utc date<br />
            转换为 UTC 时间
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.ToDateInfo(System.DateTime)">
            <summary>
            Convert <see cref="T:System.DateTime"/> to <see cref="T:CosmosStack.Date.DateInfo"/>.<br />
            将 <see cref="T:System.DateTime"/> 转换为 <see cref="T:CosmosStack.Date.DateInfo"/>。
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.ToEpochTimeSpan(System.DateTime)">
            <summary>
            Convert <see cref="T:System.DateTime"/> to Epoch time span.
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.ToLocalDateTime(System.DateTime)">
            <summary>
            Convert <see cref="T:System.DateTime"/> to <see cref="T:NodaTime.LocalDateTime"/>.
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.ToLocalDate(System.DateTime)">
            <summary>
            Convert <see cref="T:System.DateTime"/> to <see cref="T:NodaTime.LocalDate"/>.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.ToLocalTime(System.DateTime)">
            <summary>
            Convert <see cref="T:System.DateTime"/> to <see cref="T:NodaTime.LocalTime"/>.
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.ToRfc822String(System.DateTime,System.Int32)">
            <summary>
            Get the RFC822 format from the given <see cref="T:System.DateTime"/>.
            </summary>
            <param name="dateTime"></param>
            <param name="expectedIndex"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.ToRfc822ZString(System.DateTime)">
            <summary>
            Get the RFC822Z format from the given <see cref="T:System.DateTime"/>.
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.ToRfc850String(System.DateTime,System.Int32)">
            <summary>
            Get the RFC850 format from the given <see cref="T:System.DateTime"/>.
            </summary>
            <param name="dateTime"></param>
            <param name="expectedIndex"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.ToRfc1123String(System.DateTime)">
            <summary>
            Get the RFC1123 format from the given <see cref="T:System.DateTime"/>.
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.ToRfc1123ZString(System.DateTime)">
            <summary>
            Get the RFC1123 format from the given <see cref="T:System.DateTime"/>.
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.ToRfc3339String(System.DateTime)">
            <summary>
            Get the RFC3339 format from the given <see cref="T:System.DateTime"/>.
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.ToRfc3339NanoString(System.DateTime)">
            <summary>
            Get the RFC3339Nano format from the given <see cref="T:System.DateTime"/>.
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.BeginningOfDay(System.DateTime)">
            <summary>
            Beginning of day.<br />
            获取一天的开始时间。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.BeginningOfDay(System.DateTime,System.Int32)">
            <summary>
            Beginning of day.<br />
            获取一天的开始时间。
            </summary>
            <param name="dt"></param>
            <param name="timeZoneOffset"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.BeginningOfWeek(System.DateTime)">
            <summary>
            Beginning of week.<br />
            获取一周的开始时间。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.BeginningOfWeek(System.DateTime,System.Int32)">
            <summary>
            Beginning of week.<br />
            获取一周的开始时间。
            </summary>
            <param name="dt"></param>
            <param name="timeZoneOffset"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.BeginningOfMonth(System.DateTime)">
            <summary>
            Beginning of month.<br />
            获取一个月的开始时间。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.BeginningOfMonth(System.DateTime,System.Int32)">
            <summary>
            Beginning of month.<br />
            获取一个月的开始时间。
            </summary>
            <param name="dt"></param>
            <param name="timeZoneOffset"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.BeginningOfQuarter(System.DateTime)">
            <summary>
            Beginning of quarter.<br />
            获取一个季度的开始时间。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.BeginningOfQuarter(System.DateTime,System.Int32)">
            <summary>
            Beginning of quarter.<br />
            获取一个季度的开始时间。
            </summary>
            <param name="dt"></param>
            <param name="timeZoneOffset"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.BeginningOfYear(System.DateTime)">
            <summary>
            Beginning of year.<br />
            获取一年的开始时间。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.BeginningOfYear(System.DateTime,System.Int32)">
            <summary>
            Beginning of year.<br />
            获取一年的开始时间。
            </summary>
            <param name="dt"></param>
            <param name="timeZoneOffset"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.EndOfDay(System.DateTime)">
            <summary>
            End of day.<br />
            获取一天中的结束时间。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.EndOfDay(System.DateTime,System.Int32)">
            <summary>
            End of day (timezone-adjusted).<br />
            获取一天中的结束时间。
            </summary>
            <param name="dt"></param>
            <param name="timeZoneOffset"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.EndOfWeek(System.DateTime)">
            <summary>
            End of week.<br />
            一周的结束时间。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.EndOfWeek(System.DateTime,System.Int32)">
            <summary>
            End of week.<br />
            一周的结束时间。
            </summary>
            <param name="dt"></param>
            <param name="timeZoneOffset"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.EndOfMonth(System.DateTime)">
            <summary>
            End of month.<br />
            一个月的结束时间。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.EndOfMonth(System.DateTime,System.Int32)">
            <summary>
            End of month.<br />
            一个月的结束时间。
            </summary>
            <param name="dt"></param>
            <param name="timeZoneOffset"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.EndOfQuarter(System.DateTime)">
            <summary>
            End of quarter.<br />
            一个季度的结束时间。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.EndOfQuarter(System.DateTime,System.Int32)">
            <summary>
            End of quarter.<br />
            一个季度的结束时间。
            </summary>
            <param name="dt"></param>
            <param name="timeZoneOffset"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.EndOfYear(System.DateTime)">
            <summary>
            End of year.<br />
            一年的结束时间。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.EndOfYear(System.DateTime,System.Int32)">
            <summary>
            End of year.<br />
            一年的结束时间。
            </summary>
            <param name="dt"></param>
            <param name="timeZoneOffset"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.GetTimeSpan(System.DateTime,System.DateTime)">
            <summary>
            Gets two time intervals. <br />
            获取两个时间之间的间隔。
            </summary>
            <param name="leftDt"></param>
            <param name="rightDt">  </param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.FirstDayOfYear(System.DateTime)">
            <summary>
            Get the first day of the specified year. <br />
            获取指定年份的第一天。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.FirstDayOfYear(System.DateTime,System.DayOfWeek)">
            <summary>
            Get the specified day of the first week of the specified year. <br />
            获取指定年份的第一个礼拜指定的某一天。
            </summary>
            <param name="dt"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.FirstDayOfQuarter(System.DateTime)">
            <summary>
            Get the first day of the specified quarter. <br />
            获取指定季度的第一天。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.FirstDayOfQuarter(System.DateTime,System.DayOfWeek)">
            <summary>
            Get the specified day of the first week of the specified quarter. <br />
            获取指定季度的第一个礼拜指定的某一天。
            </summary>
            <param name="dt"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.FirstDayOfMonth(System.DateTime)">
            <summary>
            Get the first day of the specified month. <br />
            获取指定月份的第一天。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.FirstDayOfMonth(System.DateTime,System.DayOfWeek)">
            <summary>
            Get the specified day of the first week of the specified month. <br />
            获取指定月份的第一个礼拜指定的某一天。
            </summary>
            <param name="dt"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.FirstDayOfWeek(System.DateTime)">
            <summary>
            Get the first day of the specified week. <br />
            获取指礼拜的第一天。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.FirstDayOfWeek(System.DateTime,System.Globalization.CultureInfo)">
            <summary>
            Get the first day of the specified week. <br />
            获取指礼拜的第一天。
            </summary>
            <param name="dt"></param>
            <param name="cultureInfo"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.LastDayOfYear(System.DateTime)">
            <summary> 
            Get the last day of the specified year. <br />
            获取指定年份的最后一天。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.LastDayOfYear(System.DateTime,System.DayOfWeek)">
            <summary>
            Get the specified day of the first week of the specified year. <br />
            获取指定年份的最后一个礼拜指定的某一天。
            </summary>
            <param name="dt"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.LastDayOfQuarter(System.DateTime)">
            <summary>
            Get the last day of the specified quarter. <br />
            获取指定季度的最后一天。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.LastDayOfQuarter(System.DateTime,System.DayOfWeek)">
            <summary>
            Get the specified day of the first week of the specified quarter. <br />
            获取指定季度的最后一个礼拜指定的某一天。
            </summary>
            <param name="dt"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.LastDayOfMonth(System.DateTime)">
            <summary>
            Get the last day of the specified month. <br />
            获取指定月份的最后一天。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.LastDayOfMonth(System.DateTime,System.DayOfWeek)">
            <summary>
            Get the specified day of the first week of the specified month. <br />
            获取指定月份的最后一个礼拜指定的某一天。
            </summary>
            <param name="dt"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.LastDayOfWeek(System.DateTime)">
            <summary>
            Get the last day of the specified week. <br />
            获取指定礼拜的最后一天。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.LastDayOfWeek(System.DateTime,System.Globalization.CultureInfo)">
            <summary>
            Get the last day of the specified week. <br />
            获取指定礼拜的最后一天。
            </summary>
            <param name="dt"></param>
            <param name="cultureInfo"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.DaysInMonth(System.DateTime)">
            <summary>
            Get the number of days in the specified month.<br />
            获取指定月份中的天数。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.DaysInYear(System.DateTime)">
            <summary>
            Get the number of days in the specified year.<br />
            获取指定年份中的天数。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.QuarterOfMonth(System.DateTime)">
            <summary>
            Get the quarter of the specified month.<br />
            获取指定月份是第几季度。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.GetWeekOfYear(System.DateTime)">
            <summary>
            Get the specified week is the week of the year.<br />
            获取指定的星期是一年中的第几个星期。
            </summary>
            <param name="datetime"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule)">
            <summary>
            Get the specified week is the week of the year.<br />
            获取指定的星期是一年中的第几个星期。
            </summary>
            <param name="datetime"></param>
            <param name="weekRule"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.GetWeekOfYear(System.DateTime,System.DayOfWeek)">
            <summary>
            Get the specified week is the week of the year.<br />
            获取指定的星期是一年中的第几个星期。
            </summary>
            <param name="datetime"></param>
            <param name="firstDayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)">
            <summary>
            Get the specified week is the week of the year.<br />
            获取指定的星期是一年中的第几个星期。
            </summary>
            <param name="datetime"></param>
            <param name="weekRule"></param>
            <param name="firstDayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.NextYear(System.DateTime)">
            <summary>
            Next year
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.PreviousYear(System.DateTime)">
            <summary>
            Previous Year
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.NextQuarter(System.DateTime)">
            <summary>
            Gets next quarter
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.PreviousQuarter(System.DateTime)">
            <summary>
            Gets previous quarter
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.NextMonth(System.DateTime)">
            <summary>
            Gets next month
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.PreviousMonth(System.DateTime)">
            <summary>
            Gets previous month
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.NextWeek(System.DateTime)">
            <summary>
            Next week
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.PreviousWeek(System.DateTime)">
            <summary>
            Previous week
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.NextDay(System.DateTime)">
            <summary>
            Next day
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.PreviousDay(System.DateTime)">
            <summary>
            Previous Day
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.Tomorrow(System.DateTime)">
            <summary>
            Tomorrow
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.Yesterday(System.DateTime)">
            <summary>
            Yesterday
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.NextDayOfWeek(System.DateTime,System.DayOfWeek)">
            <summary>
            Next
            </summary>
            <param name="dt"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.PreviousDayOfWeek(System.DateTime,System.DayOfWeek)">
            <summary>
            Previous
            </summary>
            <param name="dt"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.At(System.DateTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            At, to set hour, minute and second.<br />
            时间，修改它的时分秒。
            </summary>
            <param name="dt"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.At(System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            At, to set hour, minute, second and milliseconds.<br />
            时间，修改它的时分秒，以及毫秒。
            </summary>
            <param name="dt"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="milliseconds"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.On(System.DateTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            On, to set year, month and day.<br />
            日期，修改它的年月日。
            </summary>
            <param name="dt"></param>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.SetTime(System.DateTime,System.Int32)">
            <summary>
            Set the hour for the given time. <br />
            对给定的时间设置小时。
            </summary>
            <param name="dt"></param>
            <param name="hour"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.SetTime(System.DateTime,System.Int32,System.Int32)">
            <summary>
            Set the hour and minute for the given time. <br />
            对给定的时间设置时分。
            </summary>
            <param name="dt"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.SetTime(System.DateTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            Set the hour, minute and second for the given time. <br />
            对给定的时间设置时分秒。
            </summary>
            <param name="dt"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.SetTime(System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Set the hour, minute, second and millisecond for the given time. <br />
            对给定的时间设置时分秒和毫秒。
            </summary>
            <param name="dt"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="millisecond"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.SetHour(System.DateTime,System.Int32)">
            <summary>
            Set the hour for the given time. <br />
            对给定的时间设置小时。
            </summary>
            <param name="dt"></param>
            <param name="hour"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.SetMinute(System.DateTime,System.Int32)">
            <summary>
            Set the minute for the given time. <br />
            对给定的时间设置分钟。
            </summary>
            <param name="dt"></param>
            <param name="minute"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.SetSecond(System.DateTime,System.Int32)">
            <summary>
            Set the second for the given time. <br />
            对给定的时间设置秒。
            </summary>
            <param name="dt"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.SetMillisecond(System.DateTime,System.Int32)">
            <summary>
            Set the millisecond for the given time. <br />
            对给定的时间设置毫秒。
            </summary>
            <param name="dt"></param>
            <param name="millisecond"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.Midnight(System.DateTime)">
            <summary>
            Set the given time to midnight. <br />
            将给定的时间设置为午夜。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.Noon(System.DateTime)">
            <summary>
            Set the given time to noon. <br />
            将给定的时间设置为正午。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.SetDate(System.DateTime,System.Int32)">
            <summary>
            Set the year for the given time. <br />
            对给定的时间设置年份。
            </summary>
            <param name="dt"></param>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.SetDate(System.DateTime,System.Int32,System.Int32)">
            <summary>
            Set the year and month for the given time. <br />
            对给定的时间设置年份和月份。
            </summary>
            <param name="dt"></param>
            <param name="year"></param>
            <param name="month"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.SetDate(System.DateTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            Set the year, month and day for the given time. <br />
            对给定的时间设置年月日。
            </summary>
            <param name="dt"></param>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.SetYear(System.DateTime,System.Int32)">
            <summary>
            Set the year for the given time. <br />
            对给定的时间设置年份。
            </summary>
            <param name="dt"></param>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.SetMonth(System.DateTime,System.Int32)">
            <summary>
            Set the month for the given time. <br />
            对给定的时间设置月份。
            </summary>
            <param name="dt"></param>
            <param name="month"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.SetDay(System.DateTime,System.Int32)">
            <summary>
            Set the day for the given time. <br />
            对给定的时间设置日。
            </summary>
            <param name="dt"></param>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeExtensions.SetKind(System.DateTime,System.DateTimeKind)">
            <summary>
            Set kind
            </summary>
            <param name="dt"></param>
            <param name="kind"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Date.DateTimeFactory">
            <summary>
            DateTime Factory<br />
            时间工厂
            </summary>
        </member>
        <member name="M:CosmosStack.Date.DateTimeFactory.Now">
            <summary>
            Now<br />
            此刻
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeFactory.UtcNow">
            <summary>
            Now<br />
            此刻
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeFactory.Create(System.Int32,System.Int32,System.Int32)">
            <summary>
            Create <see cref="T:System.DateTime"/> by special date.<br />
            根据指定的日期创建 <see cref="T:System.DateTime"/>
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeFactory.Create(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Create <see cref="T:System.DateTime"/> by special date.<br />
            根据指定的日期创建 <see cref="T:System.DateTime"/>
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeFactory.Create(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Create <see cref="T:System.DateTime"/> by special date.<br />
            根据指定的日期创建 <see cref="T:System.DateTime"/>
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="millisecond"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeFactory.Create(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)">
            <summary>
            Create <see cref="T:System.DateTime"/> by special date.<br />
            根据指定的日期创建 <see cref="T:System.DateTime"/>
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="millisecond"></param>
            <param name="kind"></param>
            <returns></returns>
            <exception cref="T:CosmosStack.Date.DateTimeOutOfRangeException"></exception>
            <exception cref="T:CosmosStack.Date.InvalidDateTimeException"></exception>
        </member>
        <member name="M:CosmosStack.Date.DateTimeFactory.CreateLastDayOfMonth(System.Int32,System.Int32)">
            <summary>
            To get the latest weekday for example Monday in a month.<br />
            寻找一个月中的最后一个日期
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeFactory.CreateLastDayOfMonth(System.Int32,System.Int32,System.DayOfWeek)">
            <summary>
            To get the latest weekday for example Monday in a month.<br />
            寻找一个月中的最后一个工作日（如周一）
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeFactory.CreateLastDayOfMonth(System.Int32,System.Int32,System.Int32)">
            <summary>
            To get the latest weekday for example Monday in a month.<br />
            寻找一个月中的最后一个工作日（如周一）
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeFactory.CreateFirstDayOfMonth(System.Int32,System.Int32)">
            <summary>
            To get the first weekday for example Monday in a month.<br />
            寻找一个月中的最后一个日期
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeFactory.CreateFirstDayOfMonth(System.Int32,System.Int32,System.DayOfWeek)">
            <summary>
            To get the first weekday for example Monday in a month.<br />
            寻找一个月中的最后一个日期
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeFactory.CreateFirstDayOfMonth(System.Int32,System.Int32,System.Int32)">
            <summary>
            To get the first weekday for example Monday in a month.<br />
            寻找一个月中的最后一个日期
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeFactory.CreateNextDayByWeek(System.Int32,System.Int32,System.Int32,System.DayOfWeek)">
            <summary>
            Find the next weekday for example Monday from a special date.<br />
            根据指定的日期，获得下一个工作日（如周一）
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeFactory.CreateNextDayByWeek(System.DateTime,System.DayOfWeek)">
            <summary>
            Find the next weekday for example Monday from a special date.<br />
            根据指定的日期，获得下一个工作日（如周一）
            </summary>
            <param name="dt"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeFactory.CreatePreviousDayByWeek(System.Int32,System.Int32,System.Int32,System.DayOfWeek)">
            <summary>
            Find the next weekday for example Monday before a special date.<br />
            根据指定的日期，获得上一个工作日（如周一）
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeFactory.CreatePreviousDayByWeek(System.DateTime,System.DayOfWeek)">
            <summary>
            Find the next weekday for example Monday before a special date.<br />
            根据指定的日期，获得上一个工作日（如周一）
            </summary>
            <param name="dt"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeFactory.CreateByWeek(System.Int32,System.Int32,System.DayOfWeek,System.Int32)">
            <summary>
            Find for example the 3th Monday in a month.<br />
            寻找指定的日期（如一个月的第三个周一）
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="dayOfWeek"></param>
            <param name="occurrence"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.AddDateTimeSpan(System.DateTimeOffset,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Add DateTmeSpan
            </summary>
            <param name="dto"></param>
            <param name="timeSpan"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.SubtractDateTimeSpan(System.DateTimeOffset,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Subtract DateTmeSpan
            </summary>
            <param name="dto"></param>
            <param name="timeSpan"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.AddBusinessDays(System.DateTimeOffset,System.Int32)">
            <summary>
            Add business day
            </summary>
            <param name="dto"></param>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.SubtractBusinessDays(System.DateTimeOffset,System.Int32)">
            <summary>
            Subtract business day
            </summary>
            <param name="dto"></param>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.IsToday(System.DateTimeOffset)">
            <summary>
            判断指定
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.IsToday(System.Nullable{System.DateTimeOffset})">
            <summary>
            判断指定
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.IsBefore(System.DateTimeOffset,System.DateTimeOffset)">
            <summary>
            Is before
            </summary>
            <param name="current"></param>
            <param name="toCompareWith"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.IsAfter(System.DateTimeOffset,System.DateTimeOffset)">
            <summary>
            Is after
            </summary>
            <param name="current"></param>
            <param name="toCompareWith"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.IsInFuture(System.DateTimeOffset)">
            <summary>
            Is in future
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.IsInPast(System.DateTimeOffset)">
            <summary>
            Is in past
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.IsSameDay(System.DateTimeOffset,System.DateTimeOffset)">
            <summary>
            Is same day
            </summary>
            <param name="current"></param>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.IsSameMonth(System.DateTimeOffset,System.DateTimeOffset)">
            <summary>
            Is same month
            </summary>
            <param name="current"></param>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.IsSameYear(System.DateTimeOffset,System.DateTimeOffset)">
            <summary>
            Is same year
            </summary>
            <param name="current"></param>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.Round(System.DateTimeOffset,CosmosStack.Date.RoundTo)">
            <summary>
            Round
            </summary>
            <param name="dateTime"></param>
            <param name="rt"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.ReplaceOffsetFromDateTimeZoneLeniently(System.DateTimeOffset,NodaTime.DateTimeZone)">
            <summary>
            Replace offset from DateTimeZone leniently
            </summary>
            <param name="dto"></param>
            <param name="dateTimeZone"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.ReplaceOffsetFromDateTimeZoneStrictly(System.DateTimeOffset,NodaTime.DateTimeZone)">
            <summary>
            Replace offset from DateTimeZone strictly
            </summary>
            <param name="dto"></param>
            <param name="dateTimeZone"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.BeginningOfDay(System.DateTimeOffset)">
            <summary>
            Beginning of day
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.EndOfDay(System.DateTimeOffset)">
            <summary>
            End of day
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.FirstDayOfYear(System.DateTimeOffset)">
            <summary>
            First day of year
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.FirstDayOfQuarter(System.DateTimeOffset)">
            <summary>
            First day of quarter
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.FirstDayOfMonth(System.DateTimeOffset)">
            <summary>
            First day of month
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.FirstDayOfWeek(System.DateTimeOffset)">
            <summary>
            First day of week
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.LastDayOfYear(System.DateTimeOffset)">
            <summary>
            Last day of year
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.LastDayOfQuarter(System.DateTimeOffset)">
            <summary>
            Last day of quarter
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.LastDayOfMonth(System.DateTimeOffset)">
            <summary>
            Last day of month
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.LastDayOfWeek(System.DateTimeOffset)">
            <summary>
            Last day of week
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.WeekAfter(System.DateTimeOffset)">
            <summary>
            Gets week after
            </summary>
            <param name="start"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.WeekBefore(System.DateTimeOffset)">
            <summary>
            Gets week before
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.Midnight(System.DateTimeOffset)">
            <summary>
            Midnight
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.Noon(System.DateTimeOffset)">
            <summary>
            Noon
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.NextYear(System.DateTimeOffset)">
            <summary>
            Next year
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.PreviousYear(System.DateTimeOffset)">
            <summary>
            Previous year
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.NextQuarter(System.DateTimeOffset)">
            <summary>
            Gets next quarter
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.PreviousQuarter(System.DateTimeOffset)">
            <summary>
            Gets previous quarter
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.NextMonth(System.DateTimeOffset)">
            <summary>
            Next month
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.PreviousMonth(System.DateTimeOffset)">
            <summary>
            Previous month
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.NextWeek(System.DateTimeOffset)">
            <summary>
            Next week
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.PreviousWeek(System.DateTimeOffset)">
            <summary>
            Previous week
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.NextDay(System.DateTimeOffset)">
            <summary>
            Next day
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.PreviousDay(System.DateTimeOffset)">
            <summary>
            Previous day
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.Tomorrow(System.DateTimeOffset)">
            <summary>
            Tomorrow
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.Yesterday(System.DateTimeOffset)">
            <summary>
            Yesterday
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.NextDayOfWeek(System.DateTimeOffset,System.DayOfWeek)">
            <summary>
            Next
            </summary>
            <param name="start"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.PreviousDayOfWeek(System.DateTimeOffset,System.DayOfWeek)">
            <summary>
            Previous
            </summary>
            <param name="start"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.At(System.DateTimeOffset,System.Int32,System.Int32)">
            <summary>
            At
            </summary>
            <param name="dto"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.At(System.DateTimeOffset,System.Int32,System.Int32,System.Int32)">
            <summary>
            At
            </summary>
            <param name="dto"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.At(System.DateTimeOffset,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            At
            </summary>
            <param name="dto"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="milliseconds"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.On(System.DateTimeOffset,System.Int32,System.Int32,System.Int32)">
            <summary>
            On, to set year, month and day.<br />
            日期，修改它的年月日。
            </summary>
            <param name="dto"></param>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.SetTime(System.DateTimeOffset,System.Int32)">
            <summary>
            Set time
            </summary>
            <param name="originalDate"></param>
            <param name="hour"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.SetTime(System.DateTimeOffset,System.Int32,System.Int32)">
            <summary>
            Set time
            </summary>
            <param name="originalDate"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.SetTime(System.DateTimeOffset,System.Int32,System.Int32,System.Int32)">
            <summary>
            Set time
            </summary>
            <param name="originalDate"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.SetTime(System.DateTimeOffset,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Set time
            </summary>
            <param name="originalDate"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="millisecond"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.SetHour(System.DateTimeOffset,System.Int32)">
            <summary>
            Set hour
            </summary>
            <param name="originalDate"></param>
            <param name="hour"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.SetMinute(System.DateTimeOffset,System.Int32)">
            <summary>
            Set minute
            </summary>
            <param name="originalDate"></param>
            <param name="minute"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.SetSecond(System.DateTimeOffset,System.Int32)">
            <summary>
            Set second
            </summary>
            <param name="originalDate"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.SetMillisecond(System.DateTimeOffset,System.Int32)">
            <summary>
            Set millisecond
            </summary>
            <param name="originalDate"></param>
            <param name="millisecond"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.SetDate(System.DateTimeOffset,System.Int32)">
            <summary>
            Set date
            </summary>
            <param name="value"></param>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.SetDate(System.DateTimeOffset,System.Int32,System.Int32)">
            <summary>
            Set date
            </summary>
            <param name="value"></param>
            <param name="year"></param>
            <param name="month"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.SetDate(System.DateTimeOffset,System.Int32,System.Int32,System.Int32)">
            <summary>
            Set date
            </summary>
            <param name="value"></param>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.SetYear(System.DateTimeOffset,System.Int32)">
            <summary>
            Set year
            </summary>
            <param name="value"></param>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.SetMonth(System.DateTimeOffset,System.Int32)">
            <summary>
            Set month
            </summary>
            <param name="value"></param>
            <param name="month"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOffsetExtensions.SetDay(System.DateTimeOffset,System.Int32)">
            <summary>
            Set day
            </summary>
            <param name="value"></param>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Date.DateTimeOutOfRangeException">
            <summary>
            DateTime out of range exception.
            </summary>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOutOfRangeException.#ctor">
            <summary>
            Create a new <see cref="T:CosmosStack.Date.DateTimeOutOfRangeException"/> instance.
            </summary>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOutOfRangeException.#ctor(System.String)">
            <summary>
            Create a new <see cref="T:CosmosStack.Date.DateTimeOutOfRangeException"/> instance.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOutOfRangeException.#ctor(System.Int64)">
            <summary>
            Create a new <see cref="T:CosmosStack.Date.DateTimeOutOfRangeException"/> instance.
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOutOfRangeException.#ctor(System.Int64,System.String)">
            <summary>
            Create a new <see cref="T:CosmosStack.Date.DateTimeOutOfRangeException"/> instance.
            </summary>
            <param name="code"></param>
            <param name="message"></param>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOutOfRangeException.#ctor(System.Exception)">
            <summary>
            Create a new <see cref="T:CosmosStack.Date.DateTimeOutOfRangeException"/> instance.
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:CosmosStack.Date.DateTimeOutOfRangeException.#ctor(System.String,System.Exception)">
            <summary>
            Create a new <see cref="T:CosmosStack.Date.DateTimeOutOfRangeException"/> instance.
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="T:CosmosStack.Date.DateTimeSpan">
            <summary>
            DateTime span
            </summary>
            <summary>
            DateTime span
            </summary>
        </member>
        <member name="F:CosmosStack.Date.DateTimeSpan.DAYS_PER_YEAR">
            <summary>
            Days per year
            </summary>
        </member>
        <member name="P:CosmosStack.Date.DateTimeSpan.Months">
            <summary>
            Months
            </summary>
        </member>
        <member name="P:CosmosStack.Date.DateTimeSpan.Years">
            <summary>
            Years
            </summary>
        </member>
        <member name="P:CosmosStack.Date.DateTimeSpan.TimeSpan">
            <summary>
            Time span
            </summary>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.Equals(CosmosStack.Date.DateTimeSpan)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            <c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.Add(CosmosStack.Date.DateTimeSpan)">
            <summary>
            Adds two <see cref="T:CosmosStack.Date.DateTimeSpan"/> according operator +.
            </summary>
            <param name="number">The number to add to this <see cref="T:CosmosStack.Date.DateTimeSpan"/>.</param>
            <returns>The result of the addition.</returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.Add(System.TimeSpan)">
            <summary>
            Returns a new <see cref="T:CosmosStack.Date.DateTimeSpan"/> that adds the value of the specified <see cref="P:CosmosStack.Date.DateTimeSpan.TimeSpan"/> to the value of this instance.
            </summary>
            <param name="timeSpan">The <see cref="P:CosmosStack.Date.DateTimeSpan.TimeSpan"/> to add to this <see cref="T:CosmosStack.Date.DateTimeSpan"/>.</param>
            <returns>The result of the addition.</returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.Subtract(CosmosStack.Date.DateTimeSpan)">
            <summary>
            Subtracts the number according operator -.
            </summary>
            <param name="dateTimeSpan">The matrix to subtract from this <see cref="T:CosmosStack.Date.DateTimeSpan"/>.</param>
            <returns>The result of the subtraction.</returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_Addition(CosmosStack.Date.DateTimeSpan,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Overload of the operator +
            </summary>
            <param name="left">The left hand <see cref="T:CosmosStack.Date.DateTimeSpan"/>.</param>
            <param name="right">The right hand <see cref="T:CosmosStack.Date.DateTimeSpan"/>.</param>
            <returns>The result of the addition.</returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_Addition(CosmosStack.Date.DateTimeSpan,System.TimeSpan)">
            <summary>
            Overload of the operator +
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_Addition(System.TimeSpan,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Overload of the operator +
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_Addition(CosmosStack.Date.DateTimeSpan,NodaTime.Period)">
            <summary>
            Overload of the operator +
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_Addition(NodaTime.Period,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Overload of the operator +
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_Addition(CosmosStack.Date.DateTimeSpan,NodaTime.Duration)">
            <summary>
            Overload of the operator +
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_Addition(NodaTime.Duration,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Overload of the operator +
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_Subtraction(CosmosStack.Date.DateTimeSpan,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Overload of the operator -
            </summary>
            <param name="left">The left hand <see cref="T:CosmosStack.Date.DateTimeSpan"/>.</param>
            <param name="right">The right hand <see cref="T:CosmosStack.Date.DateTimeSpan"/>.</param>
            <returns>The result of the subtraction.</returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_Subtraction(System.TimeSpan,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Overload of the operator -
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_Subtraction(CosmosStack.Date.DateTimeSpan,System.TimeSpan)">
            <summary>
            Overload of the operator -
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_Subtraction(NodaTime.Period,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Overload of the operator -
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_Subtraction(CosmosStack.Date.DateTimeSpan,NodaTime.Period)">
            <summary>
            Overload of the operator -
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_Subtraction(NodaTime.Duration,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Overload of the operator -
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_Subtraction(CosmosStack.Date.DateTimeSpan,NodaTime.Duration)">
            <summary>
            Overload of the operator -
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_Equality(CosmosStack.Date.DateTimeSpan,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Equals operator.
            </summary>
            <param name="left">The left hand side.</param>
            <param name="right">The right hand side.</param>
            <returns><c>true</c> is <paramref name="left"/> is equal to <paramref name="right"/>; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_Equality(System.TimeSpan,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Equals operator.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_Equality(CosmosStack.Date.DateTimeSpan,System.TimeSpan)">
            <summary>
            Equals operator.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_Equality(NodaTime.Period,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Equals operator.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_Equality(CosmosStack.Date.DateTimeSpan,NodaTime.Period)">
            <summary>
            Equals operator.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_Equality(NodaTime.Duration,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Equals operator.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_Equality(CosmosStack.Date.DateTimeSpan,NodaTime.Duration)">
            <summary>
            Equals operator.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_Inequality(CosmosStack.Date.DateTimeSpan,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Not Equals operator.
            </summary>
            <param name="left">The left hand side.</param>
            <param name="right">The right hand side.</param>
            <returns><c>true</c> is <paramref name="left"/> is not equal to <paramref name="right"/>; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_Inequality(System.TimeSpan,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Not Equals operator.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_Inequality(CosmosStack.Date.DateTimeSpan,System.TimeSpan)">
            <summary>
            Not Equals operator.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_Inequality(NodaTime.Period,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Not Equals operator.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_Inequality(CosmosStack.Date.DateTimeSpan,NodaTime.Period)">
            <summary>
            Not Equals operator.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_Inequality(NodaTime.Duration,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Not Equals operator.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_Inequality(CosmosStack.Date.DateTimeSpan,NodaTime.Duration)">
            <summary>
            Not Equals operator.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_UnaryNegation(CosmosStack.Date.DateTimeSpan)">
            <summary>
            Overload of the operator -
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_LessThan(CosmosStack.Date.DateTimeSpan,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Overload of the operator &lt;
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_LessThan(CosmosStack.Date.DateTimeSpan,System.TimeSpan)">
            <summary>
            Overload of the operator &lt;
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_LessThan(System.TimeSpan,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Overload of the operator &lt;
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_LessThan(CosmosStack.Date.DateTimeSpan,NodaTime.Period)">
            <summary>
            Overload of the operator &lt;
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_LessThan(NodaTime.Period,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Overload of the operator &lt;
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_LessThan(CosmosStack.Date.DateTimeSpan,NodaTime.Duration)">
            <summary>
            Overload of the operator &lt;
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_LessThan(NodaTime.Duration,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Overload of the operator &lt;
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_LessThanOrEqual(CosmosStack.Date.DateTimeSpan,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Overload of the operator &lt; or equals to
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_LessThanOrEqual(CosmosStack.Date.DateTimeSpan,System.TimeSpan)">
            <summary>
            Overload of the operator &lt; or equals to
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_LessThanOrEqual(System.TimeSpan,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Overload of the operator &lt; or equals to
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_LessThanOrEqual(CosmosStack.Date.DateTimeSpan,NodaTime.Period)">
            <summary>
            Overload of the operator &lt; or equals to
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_LessThanOrEqual(NodaTime.Period,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Overload of the operator &lt; or equals to
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_LessThanOrEqual(CosmosStack.Date.DateTimeSpan,NodaTime.Duration)">
            <summary>
            Overload of the operator &lt; or equals to
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_LessThanOrEqual(NodaTime.Duration,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Overload of the operator &lt; or equals to
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_GreaterThan(CosmosStack.Date.DateTimeSpan,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Overload of the operator &gt;
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_GreaterThan(CosmosStack.Date.DateTimeSpan,System.TimeSpan)">
            <summary>
            Overload of the operator &gt;
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_GreaterThan(System.TimeSpan,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Overload of the operator &gt;
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_GreaterThan(CosmosStack.Date.DateTimeSpan,NodaTime.Period)">
            <summary>
            Overload of the operator &gt;
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_GreaterThan(NodaTime.Period,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Overload of the operator &gt;
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_GreaterThan(CosmosStack.Date.DateTimeSpan,NodaTime.Duration)">
            <summary>
            Overload of the operator &gt;
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_GreaterThan(NodaTime.Duration,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Overload of the operator &gt;
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_GreaterThanOrEqual(CosmosStack.Date.DateTimeSpan,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Overload of the operator &gt; or equals to
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_GreaterThanOrEqual(CosmosStack.Date.DateTimeSpan,System.TimeSpan)">
            <summary>
            Overload of the operator &gt; or equals to
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_GreaterThanOrEqual(System.TimeSpan,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Overload of the operator &gt; or equals to
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_GreaterThanOrEqual(CosmosStack.Date.DateTimeSpan,NodaTime.Period)">
            <summary>
            Overload of the operator &gt; or equals to
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_GreaterThanOrEqual(NodaTime.Period,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Overload of the operator &gt; or equals to
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_GreaterThanOrEqual(CosmosStack.Date.DateTimeSpan,NodaTime.Duration)">
            <summary>
            Overload of the operator &gt; or equals to
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_GreaterThanOrEqual(NodaTime.Duration,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Overload of the operator &gt; or equals to
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_Implicit(CosmosStack.Date.DateTimeSpan)~System.TimeSpan">
            <summary>
            Performs an explicit conversion from <see cref="T:CosmosStack.Date.DateTimeSpan"/> to <see cref="P:CosmosStack.Date.DateTimeSpan.TimeSpan"/>.
            </summary>
            <param name="dateTimeSpan">The DateTimeSpan.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_Implicit(System.TimeSpan)~CosmosStack.Date.DateTimeSpan">
            <summary>
            Performs an implicit conversion from a <see cref="P:CosmosStack.Date.DateTimeSpan.TimeSpan"/> to <see cref="T:CosmosStack.Date.DateTimeSpan"/>.
            </summary>
            <param name="timeSpan">The <see cref="P:CosmosStack.Date.DateTimeSpan.TimeSpan"/> that will be converted.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_Implicit(CosmosStack.Date.DateTimeSpan)~NodaTime.Period">
            <summary>
            Performs an explicit conversion from <see cref="T:CosmosStack.Date.DateTimeSpan"/> to <see cref="T:NodaTime.Period"/>.
            </summary>
            <param name="dateTimeSpan"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_Implicit(NodaTime.Period)~CosmosStack.Date.DateTimeSpan">
            <summary>
            Performs an implicit conversion from a <see cref="T:NodaTime.Period"/> to <see cref="T:CosmosStack.Date.DateTimeSpan"/>.
            </summary>
            <param name="period">The <see cref="T:NodaTime.Period"/> that will be converted.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_Implicit(CosmosStack.Date.DateTimeSpan)~NodaTime.Duration">
            <summary>
            Performs an explicit conversion from <see cref="T:CosmosStack.Date.DateTimeSpan"/> to <see cref="T:NodaTime.Duration"/>.
            </summary>
            <param name="dateTimeSpan"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.op_Implicit(NodaTime.Duration)~CosmosStack.Date.DateTimeSpan">
            <summary>
            Performs an implicit conversion from a <see cref="T:NodaTime.Duration"/> to <see cref="T:CosmosStack.Date.DateTimeSpan"/>.
            </summary>
            <param name="duration">The <see cref="T:NodaTime.Duration"/> that will be converted.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.ToString">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.GetHashCode">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Date.DateTimeSpan.Ticks">
            <summary>
            Gets the number of ticks that represent the value of the current <see cref="P:CosmosStack.Date.DateTimeSpan.TimeSpan"/> structure.
            </summary>
        </member>
        <member name="P:CosmosStack.Date.DateTimeSpan.Days">
            <summary>
            Gets days
            </summary>
        </member>
        <member name="P:CosmosStack.Date.DateTimeSpan.Hours">
            <summary>
            Gets Hours
            </summary>
        </member>
        <member name="P:CosmosStack.Date.DateTimeSpan.Milliseconds">
            <summary>
            Gets milliseconds
            </summary>
        </member>
        <member name="P:CosmosStack.Date.DateTimeSpan.Minutes">
            <summary>
            Gets minutes
            </summary>
        </member>
        <member name="P:CosmosStack.Date.DateTimeSpan.Seconds">
            <summary>
            Gets seconds
            </summary>
        </member>
        <member name="P:CosmosStack.Date.DateTimeSpan.TotalDays">
            <summary>
            Total days
            </summary>
        </member>
        <member name="P:CosmosStack.Date.DateTimeSpan.TotalHours">
            <summary>
            Total hours
            </summary>
        </member>
        <member name="P:CosmosStack.Date.DateTimeSpan.TotalMilliseconds">
            <summary>
            Total milliseconds
            </summary>
        </member>
        <member name="P:CosmosStack.Date.DateTimeSpan.TotalMinutes">
            <summary>
            Total minutes
            </summary>
        </member>
        <member name="P:CosmosStack.Date.DateTimeSpan.TotalSeconds">
            <summary>
            Total seconds
            </summary>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.CompareTo(System.TimeSpan)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.CompareTo(System.Object)">
            <summary>
            Compare to
            </summary>
            <param name="value"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.CompareTo(CosmosStack.Date.DateTimeSpan)">
            <summary>
            Compare to
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpan.Negate">
            <summary>
            Negate
            </summary>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Date.DateTimeSpanExtensions">
            <summary>
            CosmosStack <see cref="T:CosmosStack.Date.DateTimeSpan"/> extensions.
            </summary>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpanExtensions.Ago(CosmosStack.Date.DateTimeSpan)">
            <summary>
            Ago
            </summary>
            <param name="ts"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpanExtensions.Ago(CosmosStack.Date.DateTimeSpan,System.DateTime)">
            <summary>
            Ago
            </summary>
            <param name="ts"></param>
            <param name="originalValue"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpanExtensions.OffsetAgo(CosmosStack.Date.DateTimeSpan)">
            <summary>
            DateTimeOffset Ago
            </summary>
            <param name="ts"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpanExtensions.Ago(CosmosStack.Date.DateTimeSpan,System.DateTimeOffset)">
            <summary>
            DateTimeOffset Ago
            </summary>
            <param name="ts"></param>
            <param name="originalValue"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpanExtensions.Before(CosmosStack.Date.DateTimeSpan,System.DateTime)">
            <summary>
            Before
            </summary>
            <param name="ts"></param>
            <param name="originalValue"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpanExtensions.Before(CosmosStack.Date.DateTimeSpan,System.DateTimeOffset)">
            <summary>
            DateTimeOffset Before
            </summary>
            <param name="ts"></param>
            <param name="originalValue"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpanExtensions.FromNow(CosmosStack.Date.DateTimeSpan)">
            <summary>
            From now
            </summary>
            <param name="ts"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpanExtensions.From(CosmosStack.Date.DateTimeSpan,System.DateTime)">
            <summary>
            From
            </summary>
            <param name="ts"></param>
            <param name="originalValue"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpanExtensions.OffsetFromNow(CosmosStack.Date.DateTimeSpan)">
            <summary>
            DateTimeOffset from now
            </summary>
            <param name="ts"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpanExtensions.From(CosmosStack.Date.DateTimeSpan,System.DateTimeOffset)">
            <summary>
            DateTimeOffset from
            </summary>
            <param name="ts"></param>
            <param name="originalValue"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpanExtensions.Years(System.Int32)">
            <summary>
            Create timespan value for given number of years.
            </summary>
            <param name="years"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpanExtensions.Quarters(System.Int32)">
            <summary>
            Create timespan value for given number of quarters
            </summary>
            <param name="quarters"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpanExtensions.Months(System.Int32)">
            <summary>
            Create timespan value for given number of months.
            </summary>
            <param name="months"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpanExtensions.Weeks(System.Int32)">
            <summary>
            Create timespan value for given number of weeks.
            </summary>
            <param name="weeks"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpanExtensions.Weeks(System.Double)">
            <summary>
            Create timespan value for given number of weeks.
            </summary>
            <param name="weeks"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpanExtensions.Days(System.Int32)">
            <summary>
            Create timespan value for given number of days.
            </summary>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpanExtensions.Days(System.Double)">
            <summary>
            Create timespan value for given number of days.
            </summary>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpanExtensions.Hours(System.Int32)">
            <summary>
            Create timespan value for given number of hours.
            </summary>
            <param name="hours"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpanExtensions.Hours(System.Double)">
            <summary>
            Create timespan value for given number of hours.
            </summary>
            <param name="hours"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpanExtensions.Minutes(System.Int32)">
            <summary>
            Create timespan value for given number of minutes.
            </summary>
            <param name="minutes"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpanExtensions.Minutes(System.Double)">
            <summary>
            Create timespan value for given number of minutes.
            </summary>
            <param name="minutes"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpanExtensions.Seconds(System.Int32)">
            <summary>
            Create timespan value for given number of seconds.
            </summary>
            <param name="seconds"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpanExtensions.Seconds(System.Double)">
            <summary>
            Create timespan value for given number of seconds.
            </summary>
            <param name="seconds"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpanExtensions.Milliseconds(System.Int32)">
            <summary>
            Create timespan value for given number of milliseconds.
            </summary>
            <param name="milliseconds"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpanExtensions.Milliseconds(System.Double)">
            <summary>
            Create timespan value for given number of milliseconds.
            </summary>
            <param name="milliseconds"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpanExtensions.Ticks(System.Int32)">
            <summary>
            Create timespan value for given number of ticks.
            </summary>
            <param name="ticks"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpanExtensions.Ticks(System.Int64)">
            <summary>
            Create timespan value for given number of ticks.
            </summary>
            <param name="ticks"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpanExtensions.Since(CosmosStack.Date.DateTimeSpan,System.DateTime)">
            <summary>
            Since
            </summary>
            <param name="ts"></param>
            <param name="originalValue"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpanExtensions.Since(CosmosStack.Date.DateTimeSpan,System.DateTimeOffset)">
            <summary>
            DateTimeOffset since
            </summary>
            <param name="ts"></param>
            <param name="originalValue"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeSpanExtensions.ToDisplayString(CosmosStack.Date.DateTimeSpan)">
            <summary>
            To display string
            </summary>
            <param name="ts"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeZones.ApplyDateTimeZoneLeniently(System.DateTime,NodaTime.DateTimeZone)">
            <summary>
            Apply <see cref="T:NodaTime.DateTimeZone"/> leniently.<br />
            宽松地应用 <see cref="T:NodaTime.DateTimeZone"/>。
            </summary>
            <param name="dt"></param>
            <param name="dateTimeZone"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Date.DateTimeZones.ApplyDateTimeZoneStrictly(System.DateTime,NodaTime.DateTimeZone)">
            <summary>
            Apply DateTimeZone strictly. <br />
            严格地应用 <see cref="T:NodaTime.DateTimeZone"/>。
            </summary>
            <param name="dt"></param>
            <param name="dateTimeZone"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Date.DateTimeZoneExtensions.ApplyDateTimeZoneLeniently(System.DateTime,NodaTime.DateTimeZone)">
            <summary>
            Apply <see cref="T:NodaTime.DateTimeZone"/> leniently.<br />
            宽松地应用 <see cref="T:NodaTime.DateTimeZone"/>。
            </summary>
            <param name="dt"></param>
            <param name="dateTimeZone"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Date.DateTimeZoneExtensions.ApplyDateTimeZoneStrictly(System.DateTime,NodaTime.DateTimeZone)">
            <summary>
            Apply DateTimeZone strictly. <br />
            严格地应用 <see cref="T:NodaTime.DateTimeZone"/>。
            </summary>
            <param name="dt"></param>
            <param name="dateTimeZone"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Date.DateTimeZoneExtensions.Z(System.DateTime)">
            <summary>
            Will return '+7'
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeZoneExtensions.ZZ(System.DateTime)">
            <summary>
            Will return '+07'
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeZoneExtensions.ZZZ(System.DateTime)">
            <summary>
            Will return '+07:00'
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeZoneExtensions.ZZZZ(System.DateTime)">
            <summary>
            Will return '+0700'
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateTimeZoneExtensions.ZoneAliasSet(System.DateTime)">
            <summary>
            Get a set of DateTimeZone alias.
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Date.DayOfWeekCalc">
            <summary>
            Calc for DayOfWeek
            </summary>
        </member>
        <member name="M:CosmosStack.Date.DayOfWeekCalc.DaysBetween(System.DayOfWeek,System.DayOfWeek)">
            <summary>
            Long between left <see cref="T:System.DayOfWeek"/> and right <see cref="T:System.DayOfWeek"/>.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DayOfWeekCalc.DaysBetween(NodaTime.IsoDayOfWeek,NodaTime.IsoDayOfWeek)">
            <summary>
            Long between left <see cref="T:NodaTime.IsoDayOfWeek"/> and right <see cref="T:NodaTime.IsoDayOfWeek"/>.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DayOfWeekCalc.TryDaysBetween(System.DayOfWeek,System.DayOfWeek,System.Int32@)">
            <summary>
            Long between left <see cref="T:System.DayOfWeek"/> and right <see cref="T:System.DayOfWeek"/>.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DayOfWeekCalc.TryDaysBetween(NodaTime.IsoDayOfWeek,NodaTime.IsoDayOfWeek,System.Int32@)">
            <summary>
            Long between left <see cref="T:NodaTime.IsoDayOfWeek"/> and right <see cref="T:NodaTime.IsoDayOfWeek"/>.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Date.InfiniteFutureInfo">
            <summary>
            Infinite Future Info<br />
            无限未来
            </summary>
        </member>
        <member name="P:CosmosStack.Date.InfiniteFutureInfo.Instance">
            <summary>
            Gets an <see cref="T:CosmosStack.Date.InfiniteFutureInfo"/> instance.<br />
            获得一个 <see cref="T:CosmosStack.Date.InfiniteFutureInfo"/> 实例。
            </summary>
        </member>
        <member name="P:CosmosStack.Date.InfiniteFutureInfo.Year">
            <summary>
            Year<br />
            年
            </summary>
        </member>
        <member name="P:CosmosStack.Date.InfiniteFutureInfo.Month">
            <summary>
            Month<br />
            月
            </summary>
        </member>
        <member name="P:CosmosStack.Date.InfiniteFutureInfo.Day">
            <summary>
            Day<br />
            日
            </summary>
        </member>
        <member name="M:CosmosStack.Date.InfiniteFutureInfo.ToDateTime">
            <summary>
            Convert <see cref="T:CosmosStack.Date.InfiniteFutureInfo"/> to <see cref="T:System.DateTime"/><br />
            将 <see cref="T:CosmosStack.Date.InfiniteFutureInfo"/> 转换为 <see cref="T:System.DateTime"/>。
            </summary>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Date.InfinitePastInfo">
            <summary>
            Infinite Past Info<br />
            无限过去
            </summary>
        </member>
        <member name="P:CosmosStack.Date.InfinitePastInfo.Instance">
            <summary>
            Create a new <see cref="T:CosmosStack.Date.InfinitePastInfo"/> instance.<br />
            创建一个新的 <see cref="T:CosmosStack.Date.InfinitePastInfo"/> 实例。
            </summary>
        </member>
        <member name="P:CosmosStack.Date.InfinitePastInfo.Year">
            <summary>
            Year.<br />
            年
            </summary>
        </member>
        <member name="P:CosmosStack.Date.InfinitePastInfo.Month">
            <summary>
            Month<br />
            月
            </summary>
        </member>
        <member name="P:CosmosStack.Date.InfinitePastInfo.Day">
            <summary>
            Day<br />
            日
            </summary>
        </member>
        <member name="M:CosmosStack.Date.InfinitePastInfo.ToDateTime">
            <summary>
            Convert <see cref="T:CosmosStack.Date.InfinitePastInfo"/> to <see cref="T:System.DateTime"/><br />
            将 <see cref="T:CosmosStack.Date.InfinitePastInfo"/> 转换为 <see cref="T:System.DateTime"/>。
            </summary>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Date.InvalidDateTimeException">
            <summary>
            Invalid DateTime Exception
            </summary>
        </member>
        <member name="M:CosmosStack.Date.InvalidDateTimeException.#ctor">
            <summary>
            Create a new <see cref="T:CosmosStack.Date.InvalidDateTimeException"/> instance.
            </summary>
        </member>
        <member name="M:CosmosStack.Date.InvalidDateTimeException.#ctor(System.String)">
            <summary>
            Create a new <see cref="T:CosmosStack.Date.InvalidDateTimeException"/> instance.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:CosmosStack.Date.InvalidDateTimeException.#ctor(System.Int64)">
            <summary>
            Create a new <see cref="T:CosmosStack.Date.InvalidDateTimeException"/> instance.
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:CosmosStack.Date.InvalidDateTimeException.#ctor(System.Int64,System.String)">
            <summary>
            Create a new <see cref="T:CosmosStack.Date.InvalidDateTimeException"/> instance.
            </summary>
            <param name="code"></param>
            <param name="message"></param>
        </member>
        <member name="M:CosmosStack.Date.InvalidDateTimeException.#ctor(System.Exception)">
            <summary>
            Create a new <see cref="T:CosmosStack.Date.InvalidDateTimeException"/> instance.
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:CosmosStack.Date.InvalidDateTimeException.#ctor(System.String,System.Exception)">
            <summary>
            Create a new <see cref="T:CosmosStack.Date.InvalidDateTimeException"/> instance.
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="T:CosmosStack.Date.Islamic.IslamicDateInfo">
            <summary>
            Islamic Date<br />
            伊斯兰历日期
            </summary>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateInfo.#ctor(System.DateTime)">
            <summary>
            Create a new instance for <see cref="T:CosmosStack.Date.Islamic.IslamicDateInfo"/><br />
            创建一个 <see cref="T:CosmosStack.Date.Islamic.IslamicDateInfo"/> 的新实例
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateInfo.#ctor(CosmosStack.Date.Islamic.IslamicDateTime)">
            <summary>
            Create a new instance for <see cref="T:CosmosStack.Date.Islamic.IslamicDateInfo"/><br />
            创建一个 <see cref="T:CosmosStack.Date.Islamic.IslamicDateInfo"/> 的新实例
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateInfo.#ctor(CosmosStack.Date.DateInfo)">
            <summary>
            Create a new instance for <see cref="T:CosmosStack.Date.Islamic.IslamicDateInfo"/><br />
            创建一个 <see cref="T:CosmosStack.Date.Islamic.IslamicDateInfo"/> 的新实例
            </summary>
            <param name="date"></param>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateInfo.#ctor(System.DateTime,NodaTime.CalendarSystem)">
            <summary>
            Create a new instance for <see cref="T:CosmosStack.Date.Islamic.IslamicDateInfo"/><br />
            创建一个 <see cref="T:CosmosStack.Date.Islamic.IslamicDateInfo"/> 的新实例
            </summary>
            <param name="dt"></param>
            <param name="calendar"></param>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateInfo.#ctor(CosmosStack.Date.DateInfo,NodaTime.CalendarSystem)">
            <summary>
            Create a new instance for <see cref="T:CosmosStack.Date.Islamic.IslamicDateInfo"/><br />
            创建一个 <see cref="T:CosmosStack.Date.Islamic.IslamicDateInfo"/> 的新实例
            </summary>
            <param name="date"></param>
            <param name="calendar"></param>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateInfo.IsLeepYear">
            <summary>
            Is current year a leap year.<br />
            当前年份是否为闰年
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateInfo.IsWeekend">
            <summary>
            Is current day weekend<br />
            当天日期是否为周末
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateInfo.IsWorkDay">
            <summary>
            Is current day a work day<br />
            当前日期是否为工作日
            </summary>
            <returns></returns>
        </member>
        <member name="P:CosmosStack.Date.Islamic.IslamicDateInfo.IslamicYear">
            <summary>
            Gets Islamic year<br />
            获取伊斯兰历年份
            </summary>
        </member>
        <member name="P:CosmosStack.Date.Islamic.IslamicDateInfo.IslamicMonth">
            <summary>
            Gets Islamic month.<br />
            获取伊斯兰历月份
            </summary>
        </member>
        <member name="P:CosmosStack.Date.Islamic.IslamicDateInfo.IslamicDay">
            <summary>
            Gets Islamic day.<br />
            获取伊斯兰农历日份
            </summary>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateInfo.GetIslamicMonths">
            <summary>
            Gets Islamic month.<br />
            获取伊斯兰农历月份
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateInfo.Tomorrow">
            <summary>
            Tomorrow<br />
            明天
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateInfo.Yesterday">
            <summary>
            Yesterday<br />
            昨天
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateInfo.AddDays(System.Int32)">
            <summary>
            Add days<br />
            添加若干天
            </summary>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateInfo.AddMonths(System.Int32)">
            <summary>
            Add months<br />
            添加月份
            </summary>
            <param name="months"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateInfo.GetDaysInYear">
            <summary>
            Gets days in year.<br />
            伊斯兰历年中共有几天
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateInfo.GetDaysInMonth">
            <summary>
            Gets days in month.<br />
            伊斯兰历月中共有几天
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateInfo.GetDayOfYear">
            <summary>
            Calculates the day of the Islamic year in the special date.<br />
            伊斯兰历年中的第几天 
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateInfo.GetDayOfMonth">
            <summary>
            Calculates the day of the Islamic month in the special date.<br />
            伊斯兰历月中的第几天 
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateInfo.GetDayOfWeek">
            <summary>
            Calculates the day of the week in the special date.<br />
            一周中的第几天 
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateInfo.ToDateTime">
            <summary>
            Convert to <see cref="T:System.DateTime"/><br />
            转换为 <see cref="T:System.DateTime"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateInfo.op_Implicit(CosmosStack.Date.Islamic.IslamicDateInfo)~CosmosStack.Date.DateInfo">
            <summary>
            Convert <see cref="T:CosmosStack.Date.Islamic.IslamicDateInfo"/> to <see cref="T:CosmosStack.Date.DateInfo"/>
            </summary>
            <param name="di"></param>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateInfo.op_Implicit(CosmosStack.Date.DateInfo)~CosmosStack.Date.Islamic.IslamicDateInfo">
            <summary>
            Convert <see cref="T:CosmosStack.Date.DateInfo"/> to <see cref="T:CosmosStack.Date.Islamic.IslamicDateInfo"/>
            </summary>
            <param name="dt"></param>
        </member>
        <member name="P:CosmosStack.Date.Islamic.IslamicDateInfo.InternalTime">
            <summary>
            Gets internal datetime
            </summary>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateInfo.Of(System.Int32,System.Int32,System.Int32,NodaTime.CalendarSystem)">
            <summary>
            Create a new instance of <see cref="T:CosmosStack.Date.Islamic.IslamicDateInfo"/><br />
            创建一个新的 <see cref="T:CosmosStack.Date.Islamic.IslamicDateInfo"/> 实例。
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="calendar"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateInfo.OfLunar(System.Int32,System.Int32,System.Int32,NodaTime.CalendarSystem)">
            <summary>
            Create a new instance of <see cref="T:CosmosStack.Date.Islamic.IslamicDateInfo"/><br />
            创建一个新的 <see cref="T:CosmosStack.Date.Islamic.IslamicDateInfo"/> 实例。
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="calendar"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Date.Islamic.IslamicDateTime">
            <summary>
            Islamic Date Time<br />
            伊斯兰历日期与时间
            </summary>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateTime.#ctor(System.DateTime)">
            <summary>
            Create a new instance for <see cref="T:CosmosStack.Date.Islamic.IslamicDateTime"/><br />
            创建一个 <see cref="T:CosmosStack.Date.Islamic.IslamicDateTime"/> 的新实例
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateTime.#ctor(System.DateTime,NodaTime.CalendarSystem)">
            <summary>
            Create a new instance for <see cref="T:CosmosStack.Date.Islamic.IslamicDateTime"/><br />
            创建一个 <see cref="T:CosmosStack.Date.Islamic.IslamicDateTime"/> 的新实例
            </summary>
            <param name="dt"></param>
            <param name="calendar"></param>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateTime.IsLeepYear">
            <summary>
            Is current year a leap year.<br />
            当前年份是否为闰年
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateTime.IsWeekend">
            <summary>
            Is current day weekend<br />
            当天日期是否为周末
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateTime.IsWorkDay">
            <summary>
            Is current day a work day<br />
            当前日期是否为工作日
            </summary>
            <returns></returns>
        </member>
        <member name="P:CosmosStack.Date.Islamic.IslamicDateTime.IslamicYear">
            <summary>
            Gets Islamic year<br />
            获取伊斯兰历年份
            </summary>
        </member>
        <member name="P:CosmosStack.Date.Islamic.IslamicDateTime.IslamicMonth">
            <summary>
            Gets Islamic month.<br />
            获取伊斯兰历月份
            </summary>
        </member>
        <member name="P:CosmosStack.Date.Islamic.IslamicDateTime.IslamicDay">
            <summary>
            Gets Islamic day.<br />
            获取伊斯兰农历日份
            </summary>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateTime.GetIslamicMonths">
            <summary>
            Gets Islamic month.<br />
            获取伊斯兰农历月份
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateTime.Tomorrow">
            <summary>
            Tomorrow<br />
            明天
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateTime.Yesterday">
            <summary>
            Yesterday<br />
            昨天
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateTime.AddDays(System.Int32)">
            <summary>
            Add days<br />
            添加若干天
            </summary>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateTime.AddMonths(System.Int32)">
            <summary>
            Add months<br />
            添加月份
            </summary>
            <param name="months"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateTime.GetDaysInYear">
            <summary>
            Gets days in year.<br />
            伊斯兰历年中共有几天
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateTime.GetDaysInMonth">
            <summary>
            Gets days in month.<br />
            伊斯兰历月中共有几天
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateTime.GetDayOfYear">
            <summary>
            Calculates the day of the Islamic year in the special date.<br />
            伊斯兰历年中的第几天 
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateTime.GetDayOfMonth">
            <summary>
            Calculates the day of the Islamic month in the special date.<br />
            伊斯兰历月中的第几天 
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateTime.GetDayOfWeek">
            <summary>
            Calculates the day of the week in the special date.<br />
            一周中的第几天 
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateTime.op_Implicit(CosmosStack.Date.Islamic.IslamicDateTime)~System.DateTime">
            <summary>
            Convert <see cref="T:CosmosStack.Date.Islamic.IslamicDateTime"/> to <see cref="T:System.DateTime"/>
            </summary>
            <param name="di"></param>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateTime.op_Implicit(System.DateTime)~CosmosStack.Date.Islamic.IslamicDateTime">
            <summary>
            Convert <see cref="T:System.DateTime"/> to <see cref="T:CosmosStack.Date.Islamic.IslamicDateTime"/>
            </summary>
            <param name="dt"></param>
        </member>
        <member name="P:CosmosStack.Date.Islamic.IslamicDateTime.InternalCalendarSystem">
            <summary>
            Gets <see cref="T:NodaTime.CalendarSystem"/> instance internal.
            </summary>
        </member>
        <member name="P:CosmosStack.Date.Islamic.IslamicDateTime.InternalTime">
            <summary>
            Gets internal datetime
            </summary>
        </member>
        <member name="P:CosmosStack.Date.Islamic.IslamicDateTime.InternalLocalTime">
            <summary>
            Gets internal local datetime
            </summary>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateTime.ToDateTime">
            <summary>
            Convert to <see cref="T:System.DateTime"/><br />
            转换为 <see cref="T:System.DateTime"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateTime.Of(System.Int32,System.Int32,System.Int32,NodaTime.CalendarSystem)">
            <summary>
            Create a new instance of <see cref="T:CosmosStack.Date.Islamic.IslamicDateTime"/><br />
            创建一个新的 <see cref="T:CosmosStack.Date.Islamic.IslamicDateTime"/> 实例。
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="calendar"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateTime.Of(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,NodaTime.CalendarSystem)">
            <summary>
            Create a new instance of <see cref="T:CosmosStack.Date.Islamic.IslamicDateTime"/><br />
            创建一个新的 <see cref="T:CosmosStack.Date.Islamic.IslamicDateTime"/> 实例。
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="calendar"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateTime.Of(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,NodaTime.CalendarSystem)">
            <summary>
            Create a new instance of <see cref="T:CosmosStack.Date.Islamic.IslamicDateTime"/><br />
            创建一个新的 <see cref="T:CosmosStack.Date.Islamic.IslamicDateTime"/> 实例。
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="millisecond"></param>
            <param name="calendar"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateTime.OfIslamic(System.Int32,System.Int32,System.Int32,NodaTime.CalendarSystem)">
            <summary>
            Create a new instance of <see cref="T:CosmosStack.Date.Islamic.IslamicDateTime"/><br />
            创建一个新的 <see cref="T:CosmosStack.Date.Islamic.IslamicDateTime"/> 实例。
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="calendar"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateTime.OfLunar(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,NodaTime.CalendarSystem)">
            <summary>
            Create a new instance of <see cref="T:CosmosStack.Date.Islamic.IslamicDateTime"/><br />
            创建一个新的 <see cref="T:CosmosStack.Date.Islamic.IslamicDateTime"/> 实例。
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="calendar"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.Islamic.IslamicDateTime.OfLunar(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,NodaTime.CalendarSystem)">
            <summary>
            Create a new instance of <see cref="T:CosmosStack.Date.Islamic.IslamicDateTime"/><br />
            创建一个新的 <see cref="T:CosmosStack.Date.Islamic.IslamicDateTime"/> 实例。
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="millisecond"></param>
            <param name="calendar"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Date.Islamic.IslamicMonths">
            <summary>
            Islamic / Hijri Months
            </summary>
            <remarks>
            Reference to:
                https://en.wikipedia.org/wiki/Islamic_calendar
            </remarks>
        </member>
        <member name="F:CosmosStack.Date.Islamic.IslamicMonths.Muharram">
            <summary>
            Muharram/Mohram
            </summary>
        </member>
        <member name="F:CosmosStack.Date.Islamic.IslamicMonths.Saphar">
            <summary>
            Saphar/Safar
            </summary>
        </member>
        <member name="F:CosmosStack.Date.Islamic.IslamicMonths.RabiAlAwwal">
            <summary>
            Rabi al-Awwal
            </summary>
        </member>
        <member name="F:CosmosStack.Date.Islamic.IslamicMonths.RabiAlThani">
            <summary>
            Rabi al-Thani (Rabī’ al-Ākhir)
            </summary>
        </member>
        <member name="F:CosmosStack.Date.Islamic.IslamicMonths.JomadaAlAwwel">
            <summary>
            Jomada Al Awwel/Jumada al-Ula
            </summary>
        </member>
        <member name="F:CosmosStack.Date.Islamic.IslamicMonths.JomadaAlThani">
            <summary>
            Jomada Al Thani/Jumada al-Akhirah
            </summary>
        </member>
        <member name="F:CosmosStack.Date.Islamic.IslamicMonths.Rajab">
            <summary>
            Rajab/Rojab
            </summary>
        </member>
        <member name="F:CosmosStack.Date.Islamic.IslamicMonths.Shaban">
            <summary>
            Sha'ban/Shaban
            </summary>
        </member>
        <member name="F:CosmosStack.Date.Islamic.IslamicMonths.Ramadan">
            <summary>
            Ramadan
            </summary>
        </member>
        <member name="F:CosmosStack.Date.Islamic.IslamicMonths.Shawwal">
            <summary>
            Shawwal
            </summary>
        </member>
        <member name="F:CosmosStack.Date.Islamic.IslamicMonths.DulQaDah">
            <summary>
            Dul Qa'dah/Zulqiddah
            </summary>
        </member>
        <member name="F:CosmosStack.Date.Islamic.IslamicMonths.DulHijjah">
            <summary>
            Dul Hijjah/Zulhijjah
            </summary>
        </member>
        <member name="T:CosmosStack.Date.PeriodDateBuilder">
            <summary>
            Period Date Builder<br />
            时间段构造器
            </summary>
        </member>
        <member name="M:CosmosStack.Date.PeriodDateBuilder.#ctor">
            <summary>
            Create a new <see cref="T:CosmosStack.Date.PeriodDateBuilder"/> instance.<br />
            构建一个新的 <see cref="T:CosmosStack.Date.PeriodDateBuilder"/> 实例。
            </summary>
        </member>
        <member name="M:CosmosStack.Date.PeriodDateBuilder.#ctor(System.DateTime)">
            <summary>
            Create a new <see cref="T:CosmosStack.Date.PeriodDateBuilder"/> instance.<br />
            构建一个新的 <see cref="T:CosmosStack.Date.PeriodDateBuilder"/> 实例。
            </summary>
            <param name="from"></param>
        </member>
        <member name="M:CosmosStack.Date.PeriodDateBuilder.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Create a new <see cref="T:CosmosStack.Date.PeriodDateBuilder"/> instance.<br />
            构建一个新的 <see cref="T:CosmosStack.Date.PeriodDateBuilder"/> 实例。
            </summary>
            <param name="from"></param>
            <param name="to"></param>
        </member>
        <member name="M:CosmosStack.Date.PeriodDateBuilder.#ctor(CosmosStack.Date.DateInfo)">
            <summary>
            Create a new <see cref="T:CosmosStack.Date.PeriodDateBuilder"/> instance.<br />
            构建一个新的 <see cref="T:CosmosStack.Date.PeriodDateBuilder"/> 实例。
            </summary>
            <param name="from"></param>
        </member>
        <member name="M:CosmosStack.Date.PeriodDateBuilder.#ctor(CosmosStack.Date.DateInfo,CosmosStack.Date.DateInfo)">
            <summary>
            Create a new <see cref="T:CosmosStack.Date.PeriodDateBuilder"/> instance.<br />
            构建一个新的 <see cref="T:CosmosStack.Date.PeriodDateBuilder"/> 实例。
            </summary>
            <param name="from"></param>
            <param name="to"></param>
        </member>
        <member name="M:CosmosStack.Date.PeriodDateBuilder.From(CosmosStack.Date.DateInfo)">
            <summary>
            From<br />
            时间起始于...
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.PeriodDateBuilder.To(CosmosStack.Date.DateInfo)">
            <summary>
            To<br />
            事件截止于...
            </summary>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.PeriodDateBuilder.From(System.DateTime)">
            <summary>
            From<br />
            时间起始于...
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.PeriodDateBuilder.From(System.Int32,System.Int32,System.Int32)">
            <summary>
            From<br />
            时间起始于...
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.PeriodDateBuilder.To(System.DateTime)">
            <summary>
            To<br />
            事件截止于...
            </summary>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.PeriodDateBuilder.To(System.Int32,System.Int32,System.Int32)">
            <summary>
            To<br />
            事件截止于...
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.PeriodDateBuilder.To(System.Int32)">
            <summary>
            To<br />
            事件截止于...
            </summary>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.PeriodDateBuilder.To(NodaTime.Duration)">
            <summary>
            To<br />
            事件截止于...
            </summary>
            <param name="duration"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.PeriodDateBuilder.Build">
            <summary>
            Build<br />
            构建
            </summary>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Date.DateInfoCache`1">
            <summary>
            DateInfo Cache
            </summary>
            <typeparam name="TDateInfo"></typeparam>
        </member>
        <member name="M:CosmosStack.Date.DateInfoCache`1.#ctor(System.Func{`0,`0})">
            <summary>
            Create a new instance of DateInfoCache
            </summary>
            <param name="itemCreateFunc"></param>
        </member>
        <member name="M:CosmosStack.Date.DateInfoCache`1.Count">
            <summary>
            Count
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoCache`1.Add(`0)">
            <summary>
            Add
            </summary>
            <param name="date"></param>
        </member>
        <member name="M:CosmosStack.Date.DateInfoCache`1.Contains(`0)">
            <summary>
            Contains
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.DateInfoCache`1.GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns></returns>
        </member>
        <member name="P:CosmosStack.Date.DateInfoCache`1.IsInitialized">
            <summary>
            Is initialized
            </summary>
        </member>
        <member name="M:CosmosStack.Date.DateInfoCache`1.Get(System.Int32)">
            <summary>
            Gets cache
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Date.PeriodDateInfo">
            <summary>
            Period DateInfo<br />
            时间段日期信息
            </summary>
        </member>
        <member name="M:CosmosStack.Date.PeriodDateInfo.#ctor(CosmosStack.Date.DateInfo,CosmosStack.Date.DateInfo)">
            <summary>
            Create a new <see cref="T:CosmosStack.Date.PeriodDateInfo"/> instance.<br />
            创建一个新的 <see cref="T:CosmosStack.Date.PeriodDateInfo"/> 实例。
            </summary>
            <param name="from"></param>
            <param name="to"></param>
        </member>
        <member name="P:CosmosStack.Date.PeriodDateInfo.From">
            <summary>
            From date<br />
            时间起始于...
            </summary>
        </member>
        <member name="P:CosmosStack.Date.PeriodDateInfo.To">
            <summary>
            To date<br />
            时间截止于...
            </summary>
        </member>
        <member name="M:CosmosStack.Date.PeriodDateInfo.Initialize">
            <summary>
            Initialize<br />
            初始化
            </summary>
        </member>
        <member name="T:CosmosStack.Date.PeriodDateInfo`1">
            <summary>
            Period DateInfo<br />
            时间段日期信息
            </summary>
            <typeparam name="TDateInfo"></typeparam>
        </member>
        <member name="F:CosmosStack.Date.PeriodDateInfo`1._from">
            <summary>
            From
            </summary>
        </member>
        <member name="F:CosmosStack.Date.PeriodDateInfo`1._to">
            <summary>
            To
            </summary>
        </member>
        <member name="F:CosmosStack.Date.PeriodDateInfo`1._isInfiniteFuture">
            <summary>
            Is infinite future
            </summary>
        </member>
        <member name="F:CosmosStack.Date.PeriodDateInfo`1._cache">
            <summary>
            Cache
            </summary>
        </member>
        <member name="M:CosmosStack.Date.PeriodDateInfo`1.#ctor(`0,`0,System.Func{`0,`0})">
            <summary>
            Create a new <see cref="T:CosmosStack.Date.PeriodDateInfo`1"/> instance.<br />
            创建一个新的 <see cref="T:CosmosStack.Date.PeriodDateInfo`1"/> 实例。
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <param name="itemCreateFunc"></param>
        </member>
        <member name="P:CosmosStack.Date.PeriodDateInfo`1.Length">
            <summary>
            Length of period date.<br />
            时间段的长度
            </summary>
        </member>
        <member name="P:CosmosStack.Date.PeriodDateInfo`1.From">
            <summary>
            From date<br />
            时间起始于...
            </summary>
        </member>
        <member name="P:CosmosStack.Date.PeriodDateInfo`1.To">
            <summary>
            To date<br />
            时间截止于...
            </summary>
        </member>
        <member name="M:CosmosStack.Date.PeriodDateInfo`1.GetAllDates">
            <summary>
            Get all dates<br />
            获取所有日期
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.PeriodDateInfo`1.Initialize">
            <summary>
            Initialize<br />
            初始化
            </summary>
        </member>
        <member name="P:CosmosStack.Date.PeriodDateInfo`1.Item(System.Int32)">
            <summary>
            Indexer<br />
            索引器
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Date.RoundTo">
            <summary>
            Used for rounding precision
            </summary>
        </member>
        <member name="F:CosmosStack.Date.RoundTo.Second">
            <summary>
            Second precision.
            </summary>
        </member>
        <member name="F:CosmosStack.Date.RoundTo.Minute">
            <summary>
            Minute precision.
            </summary>
        </member>
        <member name="F:CosmosStack.Date.RoundTo.Hour">
            <summary>
            Hour precision.
            </summary>
        </member>
        <member name="F:CosmosStack.Date.RoundTo.Day">
            <summary>
            Day precision.
            </summary>
        </member>
        <member name="M:CosmosStack.Date.TimeSpanExtensions.Ago(System.TimeSpan)">
            <summary>
            Ago
            </summary>
            <param name="ts"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.TimeSpanExtensions.Ago(System.TimeSpan,System.DateTime)">
            <summary>
            Ago
            </summary>
            <param name="ts"></param>
            <param name="originalValue"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.TimeSpanExtensions.OffsetAgo(System.TimeSpan)">
            <summary>
            DateTimeOffset Ago
            </summary>
            <param name="ts"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.TimeSpanExtensions.Ago(System.TimeSpan,System.DateTimeOffset)">
            <summary>
            DateTimeOffset Ago
            </summary>
            <param name="ts"></param>
            <param name="originalValue"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.TimeSpanExtensions.Before(System.TimeSpan,System.DateTime)">
            <summary>
            Before
            </summary>
            <param name="ts"></param>
            <param name="originalValue"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.TimeSpanExtensions.Before(System.TimeSpan,System.DateTimeOffset)">
            <summary>
            DateTimeOffset Before
            </summary>
            <param name="ts"></param>
            <param name="originalValue"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.TimeSpanExtensions.AddFluentTimeSpan(System.TimeSpan,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Adds the given <see cref="T:CosmosStack.Date.DateTimeSpan"/> from a <see cref="T:System.TimeSpan"/> and returns resulting <see cref="T:CosmosStack.Date.DateTimeSpan"/>.
            </summary>
        </member>
        <member name="M:CosmosStack.Date.TimeSpanExtensions.SubtractFluentTimeSpan(System.TimeSpan,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Subtracts the given <see cref="T:CosmosStack.Date.DateTimeSpan"/> from a <see cref="T:System.TimeSpan"/> and returns resulting <see cref="T:CosmosStack.Date.DateTimeSpan"/>.
            </summary>
        </member>
        <member name="M:CosmosStack.Date.TimeSpanExtensions.FromNow(System.TimeSpan)">
            <summary>
            From now
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.TimeSpanExtensions.From(System.TimeSpan,System.DateTime)">
            <summary>
            From
            </summary>
            <param name="ts"></param>
            <param name="originalValue"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.TimeSpanExtensions.OffsetFromNow(System.TimeSpan)">
            <summary>
            DateTimeOffset from now
            </summary>
            <param name="ts"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.TimeSpanExtensions.From(System.TimeSpan,System.DateTimeOffset)">
            <summary>
            DateTimeOffset from
            </summary>
            <param name="ts"></param>
            <param name="originalValue"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.TimeSpanExtensions.Round(System.TimeSpan,CosmosStack.Date.RoundTo)">
            <summary>
            Round
            </summary>
            <param name="ts"></param>
            <param name="rt"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:CosmosStack.Date.TimeSpanExtensions.Since(System.TimeSpan,System.DateTime)">
            <summary>
            Since
            </summary>
            <param name="ts"></param>
            <param name="originalValue"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.TimeSpanExtensions.Since(System.TimeSpan,System.DateTimeOffset)">
            <summary>
            DateTimeOffset since
            </summary>
            <param name="ts"></param>
            <param name="originalValue"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.TimeSpanExtensions.ToDisplayString(System.TimeSpan)">
            <summary>
            To display string
            </summary>
            <param name="ts"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Date.TimeSpanExtensions.ToDateTime(System.TimeSpan)">
            <summary>
            To datetime
            </summary>
            <param name="time"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="T:CosmosStack.Text.StringDateTimeExtensions">
            <summary>
            CosmosStack <see cref="T:System.String"/> to <see cref="T:System.DateTime"/> extensions.
            </summary>
        </member>
        <member name="M:CosmosStack.Text.StringDateTimeExtensions.CastToDateInfo(System.String,CosmosStack.Date.DateInfo)">
            <summary>
            Convert the given string to <see cref="T:CosmosStack.Date.DateInfo"/>. <br />
            将给定的字符串转换为 <see cref="T:CosmosStack.Date.DateInfo"/>。
            </summary>
            <param name="str"></param>
            <param name="defaultVal"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Text.StringDateTimeExtensions.CastToDateTimeSpan(System.String,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Convert the given string to <see cref="T:CosmosStack.Date.DateTimeSpan"/>. <br />
            将给定的字符串转换为 <see cref="T:CosmosStack.Date.DateTimeSpan"/>。
            </summary>
            <param name="str"></param>
            <param name="defaultVal"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Text.StringDateTimeExtensions.CastToNullableDateTimeSpan(System.String)">
            <summary>
            Convert the given string to a nullable <see cref="T:CosmosStack.Date.DateTimeSpan"/>. <br />
            将给定的字符串转换为可空的 <see cref="T:CosmosStack.Date.DateTimeSpan"/>。
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:NodaTime.NodaDurationExtensions">
            <summary>
            CosmosStack <see cref="T:NodaTime.Duration"/> extensions
            </summary>
        </member>
        <member name="M:NodaTime.NodaDurationExtensions.AsDuration(System.TimeSpan)">
            <summary>
            Convert <see cref="T:System.TimeSpan"/> to <see cref="T:NodaTime.Duration"/>.<br />
            将 TimeSpan 转换为 Duration。
            </summary>
            <param name="ts"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaDurationExtensions.AsDuration(CosmosStack.Date.DateTimeSpan)">
            <summary>
            Convert <see cref="T:CosmosStack.Date.DateTimeSpan"/> to <see cref="T:NodaTime.Duration"/>.<br />
            将 DateTimeSpan 转换为 Duration。
            </summary>
            <param name="ts"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaDurationExtensions.AsDurationOfMilliseconds(System.Int64)">
            <summary>
            From milliseconds
            </summary>
            <param name="milliseconds"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaDurationExtensions.AsDurationOfMilliseconds(System.Double)">
            <summary>
            From milliseconds
            </summary>
            <param name="milliseconds"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaDurationExtensions.AsDurationOfSeconds(System.Int64)">
            <summary>
            From seconds
            </summary>
            <param name="seconds"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaDurationExtensions.AsDurationOfSeconds(System.Double)">
            <summary>
            From seconds
            </summary>
            <param name="seconds"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaDurationExtensions.AsDurationOfMinutes(System.Int64)">
            <summary>
            From minutes
            </summary>
            <param name="minutes"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaDurationExtensions.AsDurationOfMinutes(System.Double)">
            <summary>
            From minutes
            </summary>
            <param name="minutes"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaDurationExtensions.AsDurationOfHours(System.Int32)">
            <summary>
            From minutes
            </summary>
            <param name="hours"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaDurationExtensions.AsDurationOfHours(System.Double)">
            <summary>
            From minutes
            </summary>
            <param name="hours"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaDurationExtensions.AsDurationOfDays(System.Int32)">
            <summary>
            From days
            </summary>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaDurationExtensions.AsDurationOfDays(System.Double)">
            <summary>
            From days
            </summary>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaDurationExtensions.AsDurationOfWeeks(System.Int32)">
            <summary>
            From weeks
            </summary>
            <param name="weeks"></param>
            <returns></returns>
        </member>
        <member name="T:NodaTime.NodaInstantExtensions">
            <summary>
            CosmosStack <see cref="T:NodaTime.Instant"/> extensions.
            </summary>
        </member>
        <member name="M:NodaTime.NodaInstantExtensions.AddNanoseconds(NodaTime.Instant,System.Int64)">
            <summary>
            Add nanoseconds
            </summary>
            <param name="i"></param>
            <param name="nanoseconds"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaInstantExtensions.AddMilliseconds(NodaTime.Instant,System.Int64)">
            <summary>
            Add milliseconds
            </summary>
            <param name="i"></param>
            <param name="milliseconds"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:NodaTime.NodaInstantExtensions.AddMilliseconds(NodaTime.Instant,System.Double)">
            <summary>
            Add milliseconds
            </summary>
            <param name="i"></param>
            <param name="milliseconds"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:NodaTime.NodaInstantExtensions.AddSeconds(NodaTime.Instant,System.Int64)">
            <summary>
            Add seconds
            </summary>
            <param name="i"></param>
            <param name="seconds"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:NodaTime.NodaInstantExtensions.AddSeconds(NodaTime.Instant,System.Double)">
            <summary>
            Add seconds
            </summary>
            <param name="i"></param>
            <param name="seconds"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:NodaTime.NodaInstantExtensions.AddMinutes(NodaTime.Instant,System.Int64)">
            <summary>
            Add Minutes
            </summary>
            <param name="i"></param>
            <param name="minutes"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:NodaTime.NodaInstantExtensions.AddMinutes(NodaTime.Instant,System.Double)">
            <summary>
            Add Minutes
            </summary>
            <param name="i"></param>
            <param name="minutes"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:NodaTime.NodaInstantExtensions.AddHours(NodaTime.Instant,System.Int32)">
            <summary>
            Add hours
            </summary>
            <param name="i"></param>
            <param name="hours"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:NodaTime.NodaInstantExtensions.AddHours(NodaTime.Instant,System.Double)">
            <summary>
            Add hours
            </summary>
            <param name="i"></param>
            <param name="hours"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:NodaTime.NodaInstantExtensions.AddDays(NodaTime.Instant,System.Int32)">
            <summary>
            Add days
            </summary>
            <param name="i"></param>
            <param name="days"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:NodaTime.NodaInstantExtensions.AddDays(NodaTime.Instant,System.Double)">
            <summary>
            Add days
            </summary>
            <param name="i"></param>
            <param name="days"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:NodaTime.NodaInstantExtensions.AddTimeSpan(NodaTime.Instant,System.TimeSpan)">
            <summary>
            Add TimeSpan
            </summary>
            <param name="i"></param>
            <param name="ts"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:NodaTime.NodaInstantExtensions.AddTimeSpan(NodaTime.Instant,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Add DateTimeSpan
            </summary>
            <param name="i"></param>
            <param name="ts"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:NodaTime.NodaInstantExtensions.PlusMilliseconds(NodaTime.Instant,System.Int64)">
            <summary>
            Add milliseconds
            </summary>
            <param name="i"></param>
            <param name="milliseconds"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:NodaTime.NodaInstantExtensions.PlusMilliseconds(NodaTime.Instant,System.Double)">
            <summary>
            Add milliseconds
            </summary>
            <param name="i"></param>
            <param name="milliseconds"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:NodaTime.NodaInstantExtensions.PlusSeconds(NodaTime.Instant,System.Int64)">
            <summary>
            Add seconds
            </summary>
            <param name="i"></param>
            <param name="seconds"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:NodaTime.NodaInstantExtensions.PlusSeconds(NodaTime.Instant,System.Double)">
            <summary>
            Add seconds
            </summary>
            <param name="i"></param>
            <param name="seconds"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:NodaTime.NodaInstantExtensions.PlusMinutes(NodaTime.Instant,System.Int64)">
            <summary>
            Add Minutes
            </summary>
            <param name="i"></param>
            <param name="minutes"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:NodaTime.NodaInstantExtensions.PlusMinutes(NodaTime.Instant,System.Double)">
            <summary>
            Add Minutes
            </summary>
            <param name="i"></param>
            <param name="minutes"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:NodaTime.NodaInstantExtensions.PlusHours(NodaTime.Instant,System.Int32)">
            <summary>
            Add hours
            </summary>
            <param name="i"></param>
            <param name="hours"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:NodaTime.NodaInstantExtensions.PlusHours(NodaTime.Instant,System.Double)">
            <summary>
            Add hours
            </summary>
            <param name="i"></param>
            <param name="hours"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:NodaTime.NodaInstantExtensions.PlusDays(NodaTime.Instant,System.Int32)">
            <summary>
            Add days
            </summary>
            <param name="i"></param>
            <param name="days"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:NodaTime.NodaInstantExtensions.PlusDays(NodaTime.Instant,System.Double)">
            <summary>
            Add days
            </summary>
            <param name="i"></param>
            <param name="days"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:NodaTime.NodaInstantExtensions.PlusTimeSpan(NodaTime.Instant,System.TimeSpan)">
            <summary>
            Add TimeSpan
            </summary>
            <param name="i"></param>
            <param name="ts"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:NodaTime.NodaInstantExtensions.PlusTimeSpan(NodaTime.Instant,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Add DateTimeSpan
            </summary>
            <param name="i"></param>
            <param name="ts"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:NodaTime.NodaIsoDayOfWeekExtensions">
            <summary>
            CosmosStack <see cref="T:NodaTime.IsoDayOfWeek"/> extensions.
            </summary>
        </member>
        <member name="M:NodaTime.NodaIsoDayOfWeekExtensions.AsIsoDayOfWeek(System.DayOfWeek)">
            <summary>
            Convert <see cref="T:System.DayOfWeek"/> to <see cref="T:NodaTime.IsoDayOfWeek"/>.<br />
            将 <see cref="T:System.DayOfWeek"/> 转换为 <see cref="T:NodaTime.IsoDayOfWeek"/>。
            </summary>
            <param name="week"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaIsoDayOfWeekExtensions.AsDayOfWeek(NodaTime.IsoDayOfWeek)">
            <summary>
            Convert <see cref="T:NodaTime.IsoDayOfWeek"/> to <see cref="T:System.DayOfWeek"/>.<br />
            将 <see cref="T:NodaTime.IsoDayOfWeek"/> 转换为 <see cref="T:System.DayOfWeek"/>。
            </summary>
            <param name="week"></param>
            <returns></returns>
        </member>
        <member name="T:NodaTime.NodaLocalDateExtensions">
            <summary>
            CosmosStack <see cref="T:NodaTime.LocalDate"/> extensions.
            </summary>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.AddDays(NodaTime.LocalDate,System.Int32)">
            <summary>
            Add days.<br />
            添加天数。
            </summary>
            <param name="ld"></param>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.AddWeeks(NodaTime.LocalDate,System.Int32)">
            <summary>
            Add weeks.<br />
            添加周数。
            </summary>
            <param name="ld"></param>
            <param name="weeks"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.AddMonths(NodaTime.LocalDate,System.Int32)">
            <summary>
            Add months.<br />
            添加月数。
            </summary>
            <param name="ld"></param>
            <param name="months"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.AddQuarters(NodaTime.LocalDate,System.Int32)">
            <summary>
            Add quarters.<br />
            添加季数。
            </summary>
            <param name="ld"></param>
            <param name="quarters"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.AddYears(NodaTime.LocalDate,System.Int32)">
            <summary>
            Add years.<br />
            添加年数。
            </summary>
            <param name="ld"></param>
            <param name="years"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.Add(NodaTime.LocalDate,NodaTime.Period)">
            <summary>
            Add period. <br />
            添加一段时间。
            </summary>
            <param name="ts"></param>
            <param name="period"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.BeginningOfMonth(NodaTime.LocalDate)">
            <summary>
            Get the day that the month starts. <br />
            获得一个月开始的那一天。
            </summary>
            <param name="ld"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.FirstDayOfYear(NodaTime.LocalDate)">
            <summary>
            Gets first day of year. <br />
            获取一年的第一天。
            </summary>
            <param name="ld"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.FirstDayOfQuarter(NodaTime.LocalDate)">
            <summary>
            Gets first day of quarter. <br />
            获取一个季度的第一天。
            </summary>
            <param name="ld"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.FirstDayOfMonth(NodaTime.LocalDate)">
            <summary>
            Gets first day of month. <br />
            获取一个月的第一天。
            </summary>
            <param name="ld"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.FirstDayOfWeek(NodaTime.LocalDate)">
            <summary>
            First day of week. <br />
            获取一周的第一天。
            </summary>
            <param name="ld"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.EndOfMonth(NodaTime.LocalDate)">
            <summary>
            Get the last day of the month. <br />
            获得一个月最后的那一天。
            </summary>
            <param name="ld"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.LastDayOfYear(NodaTime.LocalDate)">
            <summary>
            Gets last day of year.<br />
            获取一年的最后一天。
            </summary>
            <param name="ld"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.LastDayOfQuarter(NodaTime.LocalDate)">
            <summary>
            Gets last day of quarter.<br />
            获取一个季度的最后一天。
            </summary>
            <param name="ld"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.LastDayOfMonth(NodaTime.LocalDate)">
            <summary>
            Gets last day of month.<br />
            获取一个月的最后一天。
            </summary>
            <param name="ld"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.LastDayOfWeek(NodaTime.LocalDate)">
            <summary>
            Gets last day of week.<br />
            获取一周的最后一天。
            </summary>
            <param name="ld"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.NextYear(NodaTime.LocalDate)">
            <summary>
            Next year.<br />
            下一年。
            </summary>
            <param name="ld"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.PreviousYear(NodaTime.LocalDate)">
            <summary>
            Previous Year.<br />
            上一年。
            </summary>
            <param name="ld"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.NextMonth(NodaTime.LocalDate)">
            <summary>
            Gets next month.<br />
            下一个月。
            </summary>
            <param name="ld"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.PreviousMonth(NodaTime.LocalDate)">
            <summary>
            Gets previous month.<br />
            上一个月。
            </summary>
            <param name="ld"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.NextWeek(NodaTime.LocalDate)">
            <summary>
            Next Week.<br />
            下一周。
            </summary>
            <param name="ld"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.PreviousWeek(NodaTime.LocalDate)">
            <summary>
            Previous Week.<br />
            上一周。
            </summary>
            <param name="ld"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.NextDay(NodaTime.LocalDate)">
            <summary>
            Next day.<br />
            下一天。
            </summary>
            <param name="ld"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.PreviousDay(NodaTime.LocalDate)">
            <summary>
            Previous Day.<br />
            上一天。
            </summary>
            <param name="ld"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.Next(NodaTime.LocalDate,System.DayOfWeek)">
            <summary>
            Returns the next date with the specified day-of-week. <br/>
            返回具有指定星期几的下一个日期。
            </summary>
            <param name="ld"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.Next(NodaTime.LocalDate,NodaTime.IsoDayOfWeek)">
            <summary>
            Returns the next date with the specified day-of-week. <br/>
            返回具有指定星期几的下一个日期。
            </summary>
            <param name="ld"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.NextOrSame(NodaTime.LocalDate,System.DayOfWeek)">
            <summary>
            Returns the next date with the specified day-of-week, or the original date, if the day is already correct.<br/>
            返回具有指定星期几的下一个日期，或者返回原始日期（如果该日期已经正确）。
            </summary>
            <param name="ld"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.NextOrSame(NodaTime.LocalDate,NodaTime.IsoDayOfWeek)">
            <summary>
            Returns the next date with the specified day-of-week, or the original date, if the day is already correct.<br/>
            返回具有指定星期几的下一个日期，或者返回原始日期（如果该日期已经正确）。
            </summary>
            <param name="ld"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.Previous(NodaTime.LocalDate,System.DayOfWeek)">
            <summary>
            Returns the previous date with the specified day-of-week.<br/>
            返回具有指定星期几的上一个日期。
            </summary>
            <param name="ld"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.Previous(NodaTime.LocalDate,NodaTime.IsoDayOfWeek)">
            <summary>
            Returns the previous date with the specified day-of-week.<br/>
            返回具有指定星期几的上一个日期。
            </summary>
            <param name="ld"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.PreviousOrSame(NodaTime.LocalDate,System.DayOfWeek)">
            <summary>
            Returns the previous date with the specified day-of-week, or the original date, if the day is already correct.<br/>
            返回具有指定星期几的上一个日期，或者返回原始日期（如果该日期已经正确）。
            </summary>
            <param name="ld"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.PreviousOrSame(NodaTime.LocalDate,NodaTime.IsoDayOfWeek)">
            <summary>
            Returns the previous date with the specified day-of-week, or the original date, if the day is already correct.<br/>
            返回具有指定星期几的上一个日期，或者返回原始日期（如果该日期已经正确）。
            </summary>
            <param name="ld"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.SetDate(NodaTime.LocalDate,System.Int32)">
            <summary>
            Set the year.<br />
            设置年份。
            </summary>
            <param name="ld"></param>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.SetDate(NodaTime.LocalDate,System.Int32,System.Int32)">
            <summary>
            Set the year and month.<br />
            设置年和月。
            </summary>
            <param name="ld"></param>
            <param name="year"></param>
            <param name="month"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.SetDate(NodaTime.LocalDate,System.Int32,System.Int32,System.Int32)">
            <summary>
            Set the year, month, and day.<br />
            设置年、月和日。
            </summary>
            <param name="ld"></param>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.SetYear(NodaTime.LocalDate,System.Int32)">
            <summary>
            Set the year.<br />
            设置年份。
            </summary>
            <param name="ld"></param>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.SetMonth(NodaTime.LocalDate,System.Int32)">
            <summary>
            Set the month.<br />
            设置月份。
            </summary>
            <param name="ld"></param>
            <param name="month"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.SetDay(NodaTime.LocalDate,System.Int32)">
            <summary>
            Set the day.<br />
            设置日期中的天。
            </summary>
            <param name="ld"></param>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.ToDateTime(NodaTime.LocalDate)">
            <summary>
            To DateTime
            </summary>
            <param name="ld"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.ToDateTime(NodaTime.LocalDate,System.DateTimeKind)">
            <summary>
            To Datetime
            </summary>
            <param name="ld"></param>
            <param name="kind"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.ToDateInfo(NodaTime.LocalDate)">
            <summary>
            To DateInfo
            </summary>
            <param name="ld"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.ToLocalDateTime(NodaTime.LocalDate)">
            <summary>
            To LocalDateTime
            </summary>
            <param name="ld"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.ToLocalDateTime(NodaTime.LocalDate,NodaTime.CalendarSystem)">
            <summary>
            To LocalDateTime
            </summary>
            <param name="ld"></param>
            <param name="calendar"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.ToLocalDateTime(NodaTime.LocalDate,System.Int32)">
            <summary>
            To LocalDateTime
            </summary>
            <param name="ld"></param>
            <param name="hours"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.ToLocalDateTime(NodaTime.LocalDate,System.Int32,NodaTime.CalendarSystem)">
            <summary>
            To LocalDateTime
            </summary>
            <param name="ld"></param>
            <param name="hours"></param>
            <param name="calendar"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.ToLocalDateTime(NodaTime.LocalDate,System.Int32,System.Int32)">
            <summary>
            To LocalDateTime
            </summary>
            <param name="ld"></param>
            <param name="hours"></param>
            <param name="minutes"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.ToLocalDateTime(NodaTime.LocalDate,System.Int32,System.Int32,NodaTime.CalendarSystem)">
            <summary>
            To LocalDateTime
            </summary>
            <param name="ld"></param>
            <param name="hours"></param>
            <param name="minutes"></param>
            <param name="calendar"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.ToLocalDateTime(NodaTime.LocalDate,System.Int32,System.Int32,System.Int32)">
            <summary>
            To LocalDateTime
            </summary>
            <param name="ld"></param>
            <param name="hours"></param>
            <param name="minutes"></param>
            <param name="seconds"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.ToLocalDateTime(NodaTime.LocalDate,System.Int32,System.Int32,System.Int32,NodaTime.CalendarSystem)">
            <summary>
            To LocalDateTime
            </summary>
            <param name="ld"></param>
            <param name="hours"></param>
            <param name="minutes"></param>
            <param name="seconds"></param>
            <param name="calendar"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.ToLocalDateTime(NodaTime.LocalDate,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            To LocalDateTime
            </summary>
            <param name="ld"></param>
            <param name="hours"></param>
            <param name="minutes"></param>
            <param name="seconds"></param>
            <param name="milliseconds"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateExtensions.ToLocalDateTime(NodaTime.LocalDate,System.Int32,System.Int32,System.Int32,System.Int32,NodaTime.CalendarSystem)">
            <summary>
            To LocalDateTime
            </summary>
            <param name="ld"></param>
            <param name="hours"></param>
            <param name="minutes"></param>
            <param name="seconds"></param>
            <param name="milliseconds"></param>
            <param name="calendar"></param>
            <returns></returns>
        </member>
        <member name="T:NodaTime.NodaLocalDateTimeExtensions">
            <summary>
            CosmosStack <see cref="T:NodaTime.LocalDateTime"/> extensions.
            </summary>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.AddNanoseconds(NodaTime.LocalDateTime,System.Int64)">
            <summary>
            Add nanoseconds
            </summary>
            <param name="lt"></param>
            <param name="nanoseconds"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.AddMilliseconds(NodaTime.LocalDateTime,System.Int64)">
            <summary>
            Add milliseconds
            </summary>
            <param name="lt"></param>
            <param name="milliseconds"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.AddSeconds(NodaTime.LocalDateTime,System.Int64)">
            <summary>
            Add seconds
            </summary>
            <param name="lt"></param>
            <param name="seconds"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.AddMinutes(NodaTime.LocalDateTime,System.Int64)">
            <summary>
            Add minutes
            </summary>
            <param name="lt"></param>
            <param name="minutes"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.AddHours(NodaTime.LocalDateTime,System.Int64)">
            <summary>
            Add hours
            </summary>
            <param name="lt"></param>
            <param name="hours"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.AddDays(NodaTime.LocalDateTime,System.Int32)">
            <summary>
            Add days
            </summary>
            <param name="ld"></param>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.AddWeeks(NodaTime.LocalDateTime,System.Int32)">
            <summary>
            Add weeks
            </summary>
            <param name="ld"></param>
            <param name="weeks"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.AddMonths(NodaTime.LocalDateTime,System.Int32)">
            <summary>
            Add months
            </summary>
            <param name="ld"></param>
            <param name="months"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.AddQuarters(NodaTime.LocalDateTime,System.Int32)">
            <summary>
            Add quarters
            </summary>
            <param name="ld"></param>
            <param name="quarters"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.AddYears(NodaTime.LocalDateTime,System.Int32)">
            <summary>
            Add years
            </summary>
            <param name="ld"></param>
            <param name="years"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.Add(NodaTime.LocalDateTime,System.TimeSpan)">
            <summary>
            Add TimeSpan
            </summary>
            <param name="lt"></param>
            <param name="ts"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.Add(NodaTime.LocalDateTime,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Add DateTimeSpan
            </summary>
            <param name="lt"></param>
            <param name="ts"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.Add(NodaTime.LocalDateTime,NodaTime.Period)">
            <summary>
            Add period
            </summary>
            <param name="ts"></param>
            <param name="period"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.At(NodaTime.LocalDateTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            At
            </summary>
            <param name="ldt"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.At(NodaTime.LocalDateTime,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            At
            </summary>
            <param name="ldt"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="milliseconds"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.BeginningOfDay(NodaTime.LocalDateTime)">
            <summary>
            Beginning of day
            </summary>
            <param name="ldt"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.BeginningOfDay(NodaTime.LocalDateTime,System.Int32)">
            <summary>
            Beginning of day
            </summary>
            <param name="ldt"></param>
            <param name="timeZoneOffset"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.BeginningOfWeek(NodaTime.LocalDateTime)">
            <summary>
            Beginning of week
            </summary>
            <param name="ld"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.BeginningOfWeek(NodaTime.LocalDateTime,System.Int32)">
            <summary>
            Beginning of week
            </summary>
            <param name="ld"></param>
            <param name="timeZoneOffset"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.BeginningOfMonth(NodaTime.LocalDateTime)">
            <summary>
            Beginning of month
            </summary>
            <param name="ld"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.BeginningOfMonth(NodaTime.LocalDateTime,System.Int32)">
            <summary>
            Beginning of month
            </summary>
            <param name="ld"></param>
            <param name="timeZoneOffset"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.BeginningOfQuarter(NodaTime.LocalDateTime)">
            <summary>
            Beginning of quarter
            </summary>
            <param name="ld"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.BeginningOfQuarter(NodaTime.LocalDateTime,System.Int32)">
            <summary>
            Beginning of quarter
            </summary>
            <param name="ld"></param>
            <param name="timeZoneOffset"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.BeginningOfYear(NodaTime.LocalDateTime)">
            <summary>
            Beginning of year
            </summary>
            <param name="ld"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.BeginningOfYear(NodaTime.LocalDateTime,System.Int32)">
            <summary>
            Beginning of year
            </summary>
            <param name="ld"></param>
            <param name="timeZoneOffset"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.EndOfDay(NodaTime.LocalDateTime)">
            <summary>
            End of day
            </summary>
            <param name="ldt"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.EndOfDay(NodaTime.LocalDateTime,System.Int32)">
            <summary>
            End of day (timezone-adjusted)
            </summary>
            <param name="ldt"></param>
            <param name="timeZoneOffset"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.EndOfWeek(NodaTime.LocalDateTime)">
            <summary>
            End of week
            </summary>
            <param name="ldt"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.EndOfWeek(NodaTime.LocalDateTime,System.Int32)">
            <summary>
            End of week
            </summary>
            <param name="ldt"></param>
            <param name="timeZoneOffset"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.EndOfMonth(NodaTime.LocalDateTime)">
            <summary>
            End of month
            </summary>
            <param name="ldt"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.EndOfMonth(NodaTime.LocalDateTime,System.Int32)">
            <summary>
            End of month
            </summary>
            <param name="ldt"></param>
            <param name="timeZoneOffset"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.EndOfQuarter(NodaTime.LocalDateTime)">
            <summary>
            End of quarter
            </summary>
            <param name="ldt"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.EndOfQuarter(NodaTime.LocalDateTime,System.Int32)">
            <summary>
            End of quarter
            </summary>
            <param name="ldt"></param>
            <param name="timeZoneOffset"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.EndOfYear(NodaTime.LocalDateTime)">
            <summary>
            End of year
            </summary>
            <param name="ldt"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.EndOfYear(NodaTime.LocalDateTime,System.Int32)">
            <summary>
            End of year
            </summary>
            <param name="ldt"></param>
            <param name="timeZoneOffset"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.FirstDayOfYear(NodaTime.LocalDateTime)">
            <summary>
            Gets first day of year
            </summary>
            <param name="ldt"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.FirstDayOfQuarter(NodaTime.LocalDateTime)">
            <summary>
            Gets first day of quarter
            </summary>
            <param name="ldt"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.FirstDayOfMonth(NodaTime.LocalDateTime)">
            <summary>
            Gets first day of month
            </summary>
            <param name="ldt"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.FirstDayOfWeek(NodaTime.LocalDateTime)">
            <summary>
            First day of week
            </summary>
            <param name="ldt"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.LastDayOfYear(NodaTime.LocalDateTime)">
            <summary>
            Gets last day of year
            </summary>
            <param name="ldt"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.LastDayOfQuarter(NodaTime.LocalDateTime)">
            <summary>
            Gets last day of quarter
            </summary>
            <param name="ldt"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.LastDayOfMonth(NodaTime.LocalDateTime)">
            <summary>
            Gets last day of month
            </summary>
            <param name="ldt"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.LastDayOfWeek(NodaTime.LocalDateTime)">
            <summary>
            Gets last day of week
            </summary>
            <param name="ldt"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.NextYear(NodaTime.LocalDateTime)">
            <summary>
            Next year
            </summary>
            <param name="ld"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.PreviousYear(NodaTime.LocalDateTime)">
            <summary>
            Previous Year
            </summary>
            <param name="ld"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.NextMonth(NodaTime.LocalDateTime)">
            <summary>
            Gets next month
            </summary>
            <param name="ldt"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.PreviousMonth(NodaTime.LocalDateTime)">
            <summary>
            Gets previous month
            </summary>
            <param name="ldt"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.NextDay(NodaTime.LocalDateTime)">
            <summary>
            Next day
            </summary>
            <param name="ldt"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.PreviousDay(NodaTime.LocalDateTime)">
            <summary>
            Previous Day
            </summary>
            <param name="ldt"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.Next(NodaTime.LocalDateTime,System.DayOfWeek)">
            <summary>
            Next
            </summary>
            <param name="ldt"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.Previous(NodaTime.LocalDateTime,System.DayOfWeek)">
            <summary>
            Previous
            </summary>
            <param name="ldt"></param>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.WeekAfter(NodaTime.LocalDateTime)">
            <summary>
            Week after
            </summary>
            <param name="ldt"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.WeekBefore(NodaTime.LocalDateTime)">
            <summary>
            Week before
            </summary>
            <param name="ldt"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.IncreaseTime(NodaTime.LocalDateTime,System.TimeSpan)">
            <summary>
            Increase time
            </summary>
            <param name="ldt"></param>
            <param name="toAdd"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.DecreaseTime(NodaTime.LocalDateTime,System.TimeSpan)">
            <summary>
            Decrease time
            </summary>
            <param name="ldt"></param>
            <param name="toSubtract"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.SetTime(NodaTime.LocalDateTime,NodaTime.LocalTime)">
            <summary>
            Set time
            </summary>
            <param name="ldt"></param>
            <param name="lt"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.SetTime(NodaTime.LocalDateTime,System.Int32)">
            <summary>
            Set time
            </summary>
            <param name="ldt"></param>
            <param name="hour"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.SetTime(NodaTime.LocalDateTime,System.Int32,System.Int32)">
            <summary>
            Set time
            </summary>
            <param name="ldt"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.SetTime(NodaTime.LocalDateTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            Set time
            </summary>
            <param name="ldt"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.SetTime(NodaTime.LocalDateTime,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Set time
            </summary>
            <param name="ldt"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="millisecond"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.SetHour(NodaTime.LocalDateTime,System.Int32)">
            <summary>
            Set time
            </summary>
            <param name="ldt"></param>
            <param name="hour"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.SetMinute(NodaTime.LocalDateTime,System.Int32)">
            <summary>
            Set time
            </summary>
            <param name="ldt"></param>
            <param name="minute"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.SetSecond(NodaTime.LocalDateTime,System.Int32)">
            <summary>
            Set time
            </summary>
            <param name="ldt"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.SetMillisecond(NodaTime.LocalDateTime,System.Int32)">
            <summary>
            Set time
            </summary>
            <param name="ldt"></param>
            <param name="millisecond"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.Midnight(NodaTime.LocalDateTime)">
            <summary>
            Midnight
            </summary>
            <param name="ldt"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.Noon(NodaTime.LocalDateTime)">
            <summary>
            Noon
            </summary>
            <param name="ldt"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.SetDate(NodaTime.LocalDateTime,System.Int32)">
            <summary>
            Set date
            </summary>
            <param name="ldt"></param>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.SetDate(NodaTime.LocalDateTime,System.Int32,System.Int32)">
            <summary>
            Set date
            </summary>
            <param name="ldt"></param>
            <param name="year"></param>
            <param name="month"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.SetDate(NodaTime.LocalDateTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            Set date
            </summary>
            <param name="ldt"></param>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.SetYear(NodaTime.LocalDateTime,System.Int32)">
            <summary>
            Set date
            </summary>
            <param name="ldt"></param>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.SetMonth(NodaTime.LocalDateTime,System.Int32)">
            <summary>
            Set date
            </summary>
            <param name="ldt"></param>
            <param name="month"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.SetDay(NodaTime.LocalDateTime,System.Int32)">
            <summary>
            Set date
            </summary>
            <param name="ldt"></param>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.ToDateTime(NodaTime.LocalDateTime)">
            <summary>
            To DateTime
            </summary>
            <param name="ldt"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.ToDateTime(NodaTime.LocalDateTime,System.DateTimeKind)">
            <summary>
            To Datetime
            </summary>
            <param name="ldt"></param>
            <param name="kind"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.ToDateInfo(NodaTime.LocalDateTime)">
            <summary>
            To DateInfo
            </summary>
            <param name="ldt"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.ToLocalDate(NodaTime.LocalDateTime)">
            <summary>
            To LocalDate
            </summary>
            <param name="ldt"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalDateTimeExtensions.ToLocalTime(NodaTime.LocalDateTime)">
            <summary>
            To LocalTime
            </summary>
            <param name="ldt"></param>
            <returns></returns>
        </member>
        <member name="T:NodaTime.NodaLocalTimeExtensions">
            <summary>
            CosmosStack <see cref="T:NodaTime.LocalTime"/> extensions.
            </summary>
        </member>
        <member name="M:NodaTime.NodaLocalTimeExtensions.AddNanoseconds(NodaTime.LocalTime,System.Int64)">
            <summary>
            Add nanoseconds
            </summary>
            <param name="lt"></param>
            <param name="nanoseconds"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalTimeExtensions.AddMilliseconds(NodaTime.LocalTime,System.Int64)">
            <summary>
            Add milliseconds
            </summary>
            <param name="lt"></param>
            <param name="milliseconds"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalTimeExtensions.AddSeconds(NodaTime.LocalTime,System.Int64)">
            <summary>
            Add seconds
            </summary>
            <param name="lt"></param>
            <param name="seconds"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalTimeExtensions.AddMinutes(NodaTime.LocalTime,System.Int64)">
            <summary>
            Add minutes
            </summary>
            <param name="lt"></param>
            <param name="minutes"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalTimeExtensions.AddHours(NodaTime.LocalTime,System.Int64)">
            <summary>
            Add hours
            </summary>
            <param name="lt"></param>
            <param name="hours"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalTimeExtensions.Add(NodaTime.LocalTime,System.TimeSpan)">
            <summary>
            Add TimeSpan
            </summary>
            <param name="lt"></param>
            <param name="ts"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalTimeExtensions.Add(NodaTime.LocalTime,CosmosStack.Date.DateTimeSpan)">
            <summary>
            Add DateTimeSpan
            </summary>
            <param name="lt"></param>
            <param name="ts"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalTimeExtensions.Add(NodaTime.LocalTime,NodaTime.Period)">
            <summary>
            Add period
            </summary>
            <param name="ts"></param>
            <param name="period"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalTimeExtensions.At(NodaTime.LocalTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            At
            </summary>
            <param name="dt"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalTimeExtensions.At(NodaTime.LocalTime,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            At
            </summary>
            <param name="dt"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="milliseconds"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalTimeExtensions.SetTime(NodaTime.LocalTime,System.Int32)">
            <summary>
            Set time
            </summary>
            <param name="lt"></param>
            <param name="hour"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalTimeExtensions.SetTime(NodaTime.LocalTime,System.Int32,System.Int32)">
            <summary>
            Set time
            </summary>
            <param name="lt"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalTimeExtensions.SetTime(NodaTime.LocalTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            Set time
            </summary>
            <param name="lt"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalTimeExtensions.SetTime(NodaTime.LocalTime,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Set time
            </summary>
            <param name="lt"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="millisecond"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalTimeExtensions.SetHour(NodaTime.LocalTime,System.Int32)">
            <summary>
            Set time
            </summary>
            <param name="lt"></param>
            <param name="hour"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalTimeExtensions.SetMinute(NodaTime.LocalTime,System.Int32)">
            <summary>
            Set time
            </summary>
            <param name="lt"></param>
            <param name="minute"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalTimeExtensions.SetSecond(NodaTime.LocalTime,System.Int32)">
            <summary>
            Set time
            </summary>
            <param name="lt"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalTimeExtensions.SetMillisecond(NodaTime.LocalTime,System.Int32)">
            <summary>
            Set time
            </summary>
            <param name="lt"></param>
            <param name="millisecond"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalTimeExtensions.IncreaseTime(NodaTime.LocalTime,System.TimeSpan)">
            <summary>
            Increase time
            </summary>
            <param name="ldt"></param>
            <param name="toAdd"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalTimeExtensions.DecreaseTime(NodaTime.LocalTime,System.TimeSpan)">
            <summary>
            Decrease time
            </summary>
            <param name="ldt"></param>
            <param name="toSubtract"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalTimeExtensions.ToDateTime(NodaTime.LocalTime)">
            <summary>
            To DateTime
            </summary>
            <param name="lt"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalTimeExtensions.ToDateTime(NodaTime.LocalTime,System.DateTimeKind)">
            <summary>
            To Datetime
            </summary>
            <param name="lt"></param>
            <param name="kind"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalTimeExtensions.ToDateTime(NodaTime.LocalTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            To DateTime
            </summary>
            <param name="lt"></param>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalTimeExtensions.ToDateTime(NodaTime.LocalTime,System.Int32,System.Int32,System.Int32,System.DateTimeKind)">
            <summary>
            To Datetime
            </summary>
            <param name="lt"></param>
            <param name="day"></param>
            <param name="kind"></param>
            <param name="year"></param>
            <param name="month"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalTimeExtensions.ToLocalDateTime(NodaTime.LocalTime)">
            <summary>
            To LocalDateTime
            </summary>
            <param name="lt"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalTimeExtensions.ToLocalDateTime(NodaTime.LocalTime,NodaTime.CalendarSystem)">
            <summary>
            To LocalDateTime
            </summary>
            <param name="lt"></param>
            <param name="calendar"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalTimeExtensions.ToLocalDateTime(NodaTime.LocalTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            To LocalDateTime
            </summary>
            <param name="lt"></param>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaLocalTimeExtensions.ToLocalDateTime(NodaTime.LocalTime,System.Int32,System.Int32,System.Int32,NodaTime.CalendarSystem)">
            <summary>
            To LocalDateTime
            </summary>
            <param name="lt"></param>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="calendar"></param>
            <returns></returns>
        </member>
        <member name="T:NodaTime.NodaPeriodExtensions">
            <summary>
            CosmosStack <see cref="T:NodaTime.Period"/> extensions.
            </summary>
        </member>
        <member name="M:NodaTime.NodaPeriodExtensions.AsPeriod(System.TimeSpan)">
            <summary>
            From TimeSpan
            </summary>
            <param name="ts"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaPeriodExtensions.AsPeriod(CosmosStack.Date.DateTimeSpan)">
            <summary>
            From DateTimeSpan
            </summary>
            <param name="ts"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaPeriodExtensions.AsPeriod(NodaTime.Duration)">
            <summary>
            From duration
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaPeriodExtensions.AsTimeSpan(NodaTime.Period)">
            <summary>
            To TimeSpan
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaPeriodExtensions.AsDateTimeSpan(NodaTime.Period)">
            <summary>
            To DateTimeSpan
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaPeriodExtensions.AsDuration(NodaTime.Period)">
            <summary>
            TO Duration
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaPeriodExtensions.AsPeriodOfNanoseconds(System.Int64)">
            <summary>
            From nanoseconds
            </summary>
            <param name="nanoseconds"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaPeriodExtensions.AsPeriodOfMilliseconds(System.Int64)">
            <summary>
            From Milliseconds
            </summary>
            <param name="milliseconds"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaPeriodExtensions.AsPeriodOfSeconds(System.Int64)">
            <summary>
            From seconds
            </summary>
            <param name="seconds"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaPeriodExtensions.AsPeriodOfMinutes(System.Int64)">
            <summary>
            From Minutes
            </summary>
            <param name="minutes"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaPeriodExtensions.AsPeriodOfHours(System.Int64)">
            <summary>
            From hours
            </summary>
            <param name="hours"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaPeriodExtensions.AsPeriodOfDays(System.Int32)">
            <summary>
            From days
            </summary>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaPeriodExtensions.AsPeriodOfWeeks(System.Int32)">
            <summary>
            From weeks
            </summary>
            <param name="weeks"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaPeriodExtensions.AsPeriodOfMonths(System.Int32)">
            <summary>
            From months
            </summary>
            <param name="months"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaPeriodExtensions.AsPeriodOfQuarters(System.Int32)">
            <summary>
            From quarters
            </summary>
            <param name="quarters"></param>
            <returns></returns>
        </member>
        <member name="M:NodaTime.NodaPeriodExtensions.AsPeriodOfYears(System.Int32)">
            <summary>
            From years
            </summary>
            <param name="years"></param>
            <returns></returns>
        </member>
    </members>
</doc>
